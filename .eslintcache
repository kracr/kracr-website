[{"A:\\Semester 6\\kracr-website\\src\\index.js":"1","A:\\Semester 6\\kracr-website\\src\\reportWebVitals.js":"2","A:\\Semester 6\\kracr-website\\src\\App.js":"3","A:\\Semester 6\\kracr-website\\src\\Reducers\\Index.js":"4","A:\\Semester 6\\kracr-website\\src\\Reducers\\isLogged.js":"5","A:\\Semester 6\\kracr-website\\src\\Reducers\\userDetails.js":"6","A:\\Semester 6\\kracr-website\\src\\Components\\Home\\Home.jsx":"7","A:\\Semester 6\\kracr-website\\src\\Components\\Publications\\Publication.jsx":"8","A:\\Semester 6\\kracr-website\\src\\Components\\Team\\Team.jsx":"9","A:\\Semester 6\\kracr-website\\src\\Components\\Projects\\ProjectDetails.jsx":"10","A:\\Semester 6\\kracr-website\\src\\Components\\Footer\\Footer.jsx":"11","A:\\Semester 6\\kracr-website\\src\\Components\\News\\News.jsx":"12","A:\\Semester 6\\kracr-website\\src\\Components\\CMS\\LoginCMS\\LoginCMS.jsx":"13","A:\\Semester 6\\kracr-website\\src\\Components\\NavBar\\Navbar.jsx":"14","A:\\Semester 6\\kracr-website\\src\\Components\\CMS\\HomeCMS\\CMS.jsx":"15","A:\\Semester 6\\kracr-website\\src\\Components\\Chatbot\\chatbot.jsx":"16","A:\\Semester 6\\kracr-website\\src\\Components\\Projects\\Project.jsx":"17","A:\\Semester 6\\kracr-website\\src\\firebase.js":"18","A:\\Semester 6\\kracr-website\\src\\Actions\\index.js":"19","A:\\Semester 6\\kracr-website\\src\\Components\\Chatbot\\messageInputBox.jsx":"20","A:\\Semester 6\\kracr-website\\src\\Components\\Chatbot\\message.jsx":"21","A:\\Semester 6\\kracr-website\\src\\Components\\CMS\\TeamCMS\\TeamCMS.jsx":"22","A:\\Semester 6\\kracr-website\\src\\Components\\CMS\\ProjectCMS\\ProjectCMS.jsx":"23","A:\\Semester 6\\kracr-website\\src\\Components\\CMS\\PublicationCMS\\PublicationCMS.jsx":"24","A:\\Semester 6\\kracr-website\\src\\Components\\CMS\\NewsCMS\\NewsCMS.jsx":"25","A:\\Semester 6\\kracr-website\\src\\Components\\CMS\\TeamCMS\\TeamCMSMember.jsx":"26","A:\\Semester 6\\kracr-website\\src\\Components\\JoinUs\\JoinUs.jsx":"27","A:\\Semester 6\\kracr-website\\src\\Components\\CMS\\JoinUsCMS\\JoinUsCMS.jsx":"28"},{"size":797,"mtime":1643301985851,"results":"29","hashOfConfig":"30"},{"size":375,"mtime":1643301985851,"results":"31","hashOfConfig":"30"},{"size":2180,"mtime":1650369017477,"results":"32","hashOfConfig":"30"},{"size":259,"mtime":1643301985850,"results":"33","hashOfConfig":"30"},{"size":285,"mtime":1643301985850,"results":"34","hashOfConfig":"30"},{"size":288,"mtime":1643301985851,"results":"35","hashOfConfig":"30"},{"size":17240,"mtime":1647886214491,"results":"36","hashOfConfig":"30"},{"size":2919,"mtime":1650796089718,"results":"37","hashOfConfig":"30"},{"size":26786,"mtime":1650822012072,"results":"38","hashOfConfig":"30"},{"size":3544,"mtime":1650796036152,"results":"39","hashOfConfig":"30"},{"size":1511,"mtime":1643301985420,"results":"40","hashOfConfig":"30"},{"size":6600,"mtime":1650795987616,"results":"41","hashOfConfig":"30"},{"size":1132,"mtime":1650262242369,"results":"42","hashOfConfig":"30"},{"size":2171,"mtime":1650369017949,"results":"43","hashOfConfig":"30"},{"size":1499,"mtime":1650369017486,"results":"44","hashOfConfig":"30"},{"size":8965,"mtime":1643301985419,"results":"45","hashOfConfig":"30"},{"size":9944,"mtime":1650796014641,"results":"46","hashOfConfig":"30"},{"size":837,"mtime":1643301985851,"results":"47","hashOfConfig":"30"},{"size":401,"mtime":1643301985413,"results":"48","hashOfConfig":"30"},{"size":1290,"mtime":1643301985420,"results":"49","hashOfConfig":"30"},{"size":4131,"mtime":1643301985420,"results":"50","hashOfConfig":"30"},{"size":10511,"mtime":1650795925477,"results":"51","hashOfConfig":"30"},{"size":13702,"mtime":1650795884082,"results":"52","hashOfConfig":"30"},{"size":7786,"mtime":1643301985417,"results":"53","hashOfConfig":"30"},{"size":4000,"mtime":1650795852425,"results":"54","hashOfConfig":"30"},{"size":3187,"mtime":1643301985418,"results":"55","hashOfConfig":"30"},{"size":5478,"mtime":1650795951755,"results":"56","hashOfConfig":"30"},{"size":7286,"mtime":1650795795035,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1xcjmql",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":1,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"60"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"60"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"60"},"A:\\Semester 6\\kracr-website\\src\\index.js",[],["131","132"],"A:\\Semester 6\\kracr-website\\src\\reportWebVitals.js",[],"A:\\Semester 6\\kracr-website\\src\\App.js",[],"A:\\Semester 6\\kracr-website\\src\\Reducers\\Index.js",[],"A:\\Semester 6\\kracr-website\\src\\Reducers\\isLogged.js",[],"A:\\Semester 6\\kracr-website\\src\\Reducers\\userDetails.js",[],"A:\\Semester 6\\kracr-website\\src\\Components\\Home\\Home.jsx",["133","134","135","136","137","138","139","140","141"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./home.scss\";\r\nimport Particles from \"react-particles-js\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport firebase from \"firebase\";\r\nimport db from \"../../firebase\";\r\nimport SimpleImageSlider from \"react-simple-image-slider\";\r\nimport { Slide, Fade } from \"react-slideshow-image\";\r\nimport \"react-slideshow-image/dist/styles.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ScrollMenu, VisibilityContext } from \"react-horizontal-scrolling-menu\";\r\nimport { NavigateBefore, NavigateNext } from \"@material-ui/icons\";\r\n\r\nfunction Home() {\r\n  //Image SLider CODE BEGINS\r\n  const images = [\r\n    \"https://dummyimage.com/600x400/000/fff\",\r\n    \"https://dummyimage.com/600x400/000/fff\",\r\n    \"https://dummyimage.com/600x400/000/fff\",\r\n  ];\r\n  //Image SLider CODE ENDS\r\n  //Contact Form Backend\r\n  const [contactEmail, setContactEmail] = useState(\"\");\r\n  const [contactName, setContactName] = useState(\"\");\r\n  const [contactMessage, setContactMessage] = useState(\"\");\r\n  const [allProjects, setAllProjects] = useState([]);\r\n  const [allNews, setAllNews] = useState([]);\r\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];\r\n\r\n  useEffect(() => {\r\n    db.collection(\"News\")\r\n      .orderBy(\"Date\", \"desc\")\r\n      .limit(8)\r\n      .onSnapshot((snapshot) => {\r\n        setAllNews(\r\n            snapshot.docs.map((doc) => ({ id: doc.id, news: doc.data() }))\r\n        );\r\n      });\r\n    }, []);\r\n\r\n  //Getting the Projects\r\n  useEffect(() => {\r\n    db.collection(\"Projects\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .limit(4)\r\n      .onSnapshot((snapshot) => {\r\n        setAllProjects(\r\n          snapshot.docs.map((doc) => ({ id: doc.id, project: doc.data() }))\r\n        );\r\n      });\r\n  }, []);\r\n  //Ending THe Projects\r\n\r\n  const sendContact = (e) => {\r\n    if (!validate(contactEmail)) {\r\n      window.alert(\"Email not entered correctly\");\r\n    } else {\r\n      if (contactName === \"\" || contactMessage === \"\") {\r\n        window.alert(\"Please Fill all the details\");\r\n      } else {\r\n        e.preventDefault();\r\n        db.collection(\"ContactUs\").doc().set({\r\n          Message: contactMessage,\r\n          Email: contactEmail,\r\n          Name: contactName,\r\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n        setContactMessage(\"\");\r\n        setContactEmail(\"\");\r\n        setContactName(\"\");\r\n        window.alert(\"Message Sent\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const validate = (text) => {\r\n    console.log(text);\r\n    let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    if (reg.test(text) === false) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  function LeftArrow() {\r\n    const { isFirstItemVisible, scrollPrev } = React.useContext(VisibilityContext)\r\n  \r\n    return (\r\n      <div className=\"arrow left\" onClick={() => scrollPrev()} >\r\n        <NavigateBefore disabled={isFirstItemVisible} />\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  function RightArrow() {\r\n    const { isLastItemVisible, scrollNext } = React.useContext(VisibilityContext)\r\n  \r\n    return (\r\n      <div className=\"arrow right\"  onClick={() => scrollNext()}>\r\n        <NavigateNext disabled={isLastItemVisible}/>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\n  //Ending Contact Form Backend\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"splash\">\r\n        <Particles\r\n          canvasClassName=\"particleBackground\"\r\n          params={{\r\n            particles: {\r\n              number: { value: 70, density: { enable: true, value_area: 800 } },\r\n              color: { value: \"#1b1b1b\" },\r\n              shape: {\r\n                type: \"circle\",\r\n                stroke: { width: 0, color: \"#1b1b1b\" },\r\n                polygon: { nb_sides: 5 },\r\n                image: { src: \"img/github.svg\", width: 100, height: 100 },\r\n              },\r\n              opacity: {\r\n                value: 0.5,\r\n                random: true,\r\n                anim: {\r\n                  enable: false,\r\n                  speed: 0.2,\r\n                  opacity_min: 0.1,\r\n                  sync: false,\r\n                },\r\n              },\r\n              size: {\r\n                value: 3,\r\n                random: true,\r\n                anim: { enable: false, speed: 40, size_min: 0.1, sync: false },\r\n              },\r\n              line_linked: {\r\n                enable: true,\r\n                distance: 70,\r\n                color: \"#1b1b1b\",\r\n                opacity: 0.4,\r\n                width: 1,\r\n              },\r\n              move: {\r\n                enable: true,\r\n                speed: 3,\r\n                direction: \"none\",\r\n                random: false,\r\n                straight: false,\r\n                out_mode: \"out\",\r\n                bounce: false,\r\n                attract: { enable: false, rotateX: 600, rotateY: 1200 },\r\n              },\r\n            },\r\n            interactivity: {\r\n              detect_on: \"canvas\",\r\n              events: {\r\n                onhover: { enable: true, mode: \"grab\" },\r\n                onclick: { enable: false, mode: \"push\" },\r\n                resize: false,\r\n              },\r\n              modes: {\r\n                grab: { distance: 150, line_linked: { opacity: 0.5 } },\r\n                bubble: {\r\n                  distance: 400,\r\n                  size: 40,\r\n                  duration: 2,\r\n                  opacity: 8,\r\n                  speed: 3,\r\n                },\r\n                repulse: { distance: 200, duration: 0.4 },\r\n                push: { particles_nb: 4 },\r\n                remove: { particles_nb: 2 },\r\n              },\r\n            },\r\n            retina_detect: true,\r\n          }}\r\n        />\r\n        <div className=\"content\">\r\n          <div className=\"wrapper\">\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <div className=\"toprow\">\r\n              Knowledgeable Computing and <br />\r\n              Reasoning Lab\r\n            </div>\r\n            <div className=\"middlerow\">KRaCR</div>\r\n            <div className=\"bottomrow\">Cracker Of A Lab</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"AboutUs\">\r\n        <div className=\"wrapper\">\r\n          <div className=\"left\">\r\n            <div className=\"title\">About Us</div>\r\n            <div className=\"content\">\r\n              Background knowledge and the ability to draw appropriate inferences when required plays a central role in human decision making. At the Knowledgeable Computing and Reasoning (KRaCR; pronounced as cracker) Lab affiliated with the <a href=\"https://cse.iiitd.ac.in/\" >CSE department</a> at <a href=\"https://iiitd.ac.in/\" >IIIT-Delhi</a>, we investigate techniques to incorporate these features into the machine and improve its decision making. We work on all aspects of the Semantic Web and Knowledge Graphs, including ontology modelling, knowledge graphs, ontology reasoning, and their applications to different domains such as healthcare, air pollution, and robotics.\r\n            </div>\r\n          </div>\r\n          <div className=\"right\">\r\n            <Slide>\r\n              <div className=\"each-slide\">\r\n                <div\r\n                  style={{\r\n                    backgroundImage: `url('https://firebasestorage.googleapis.com/v0/b/kracr-website.appspot.com/o/slideshow%2F1.jpg?alt=media&token=6a6dbf95-a448-49c6-b858-11c22eb8a46a')`,\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    backgroundSize: \"cover\",\r\n                  }}\r\n                >\r\n                  <span>Slide 1</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"each-slide\">\r\n                <div\r\n                  style={{\r\n                    backgroundImage: `url('https://firebasestorage.googleapis.com/v0/b/kracr-website.appspot.com/o/slideshow%2F2.jpg?alt=media&token=775a7b67-e5da-4a09-adde-996ec08b2fb6')`,\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    backgroundSize: \"cover\",\r\n                  }}\r\n                >\r\n                  <span>Slide 2</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"each-slide\">\r\n                <div\r\n                  style={{\r\n                    backgroundImage: `url('https://firebasestorage.googleapis.com/v0/b/kracr-website.appspot.com/o/slideshow%2F13.jpg?alt=media&token=e4406585-1ba8-4076-a895-c5464979b3b8')`,\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    backgroundSize: \"cover\",\r\n                  }}\r\n                >\r\n                  <span>Slide 3</span>\r\n                </div>\r\n              </div>\r\n\t\t\t  <div className=\"each-slide\">\r\n                <div\r\n                  style={{\r\n                    backgroundImage: `url('https://firebasestorage.googleapis.com/v0/b/kracr-website.appspot.com/o/slideshow%2F4.jpg?alt=media&token=e2be144f-54fd-49ab-afcf-034cdd5ce404')`,\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    backgroundSize: \"cover\",\r\n                  }}\r\n                >\r\n                  <span>Slide 4</span>\r\n                </div>\r\n              </div>\r\n\t\t\t  <div className=\"each-slide\">\r\n                <div\r\n                  style={{\r\n                    backgroundImage: `url('https://firebasestorage.googleapis.com/v0/b/kracr-website.appspot.com/o/slideshow%2F5.jpg?alt=media&token=31d5f471-fc3c-48d4-85f8-bb4268891630')`,\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    backgroundSize: \"cover\",\r\n                  }}\r\n                >\r\n                  <span>Slide 5</span>\r\n                </div>\r\n              </div>\r\n\t\t\t  <div className=\"each-slide\">\r\n                <div\r\n                  style={{\r\n                    backgroundImage: `url('https://firebasestorage.googleapis.com/v0/b/kracr-website.appspot.com/o/slideshow%2F6.jpg?alt=media&token=f0facd4f-1bed-4a0a-a639-3b202996ff2f')`,\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    backgroundSize: \"cover\",\r\n                  }}\r\n                >\r\n                  <span>Slide 6</span>\r\n                </div>\r\n              </div>\r\n\t\t\t  <div className=\"each-slide\">\r\n                <div\r\n                  style={{\r\n                    backgroundImage: `url('https://firebasestorage.googleapis.com/v0/b/kracr-website.appspot.com/o/slideshow%2F7.jpg?alt=media&token=bb3d3822-e23d-4c9f-bebb-38cf09539329')`,\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    backgroundSize: \"cover\",\r\n                  }}\r\n                >\r\n                  <span>Slide 7</span>\r\n                </div>\r\n              </div>\r\n\t\t\t  <div className=\"each-slide\">\r\n                <div\r\n                  style={{\r\n                    backgroundImage: `url('https://firebasestorage.googleapis.com/v0/b/kracr-website.appspot.com/o/slideshow%2F8.jpg?alt=media&token=c8d1d7b0-a63c-40da-a554-5e5e02da94b8')`,\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    backgroundSize: \"cover\",\r\n                  }}\r\n                >\r\n                  <span>Slide 8</span>\r\n                </div>\r\n              </div>\r\n\t\t\t  <div className=\"each-slide\">\r\n                <div\r\n                  style={{\r\n                    backgroundImage: `url('https://firebasestorage.googleapis.com/v0/b/kracr-website.appspot.com/o/slideshow%2F9.jpg?alt=media&token=b696478f-ecd6-4e1c-9d1a-526a4da8653e')`,\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    backgroundSize: \"cover\",\r\n                  }}\r\n                >\r\n                  <span>Slide 9</span>\r\n                </div>\r\n              </div>\r\n\t\t\t  <div className=\"each-slide\">\r\n                <div\r\n                  style={{\r\n                    backgroundImage: `url('https://firebasestorage.googleapis.com/v0/b/kracr-website.appspot.com/o/slideshow%2F10.jpg?alt=media&token=241121d9-0d21-4f54-a6f4-a1836703c2e0')`,\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    backgroundSize: \"cover\",\r\n                  }}\r\n                >\r\n                  <span>Slide 10</span>\r\n                </div>\r\n              </div>\r\n\t\t\t  <div className=\"each-slide\">\r\n                <div\r\n                  style={{\r\n                    backgroundImage: `url('https://firebasestorage.googleapis.com/v0/b/kracr-website.appspot.com/o/slideshow%2F11.jpg?alt=media&token=ca6c9e20-3589-4564-aef6-5dd10884803d')`,\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    backgroundSize: \"cover\",\r\n                  }}\r\n                >\r\n                  <span>Slide 11</span>\r\n                </div>\r\n              </div>\r\n\t\t\t  <div className=\"each-slide\">\r\n                <div\r\n                  style={{\r\n                    backgroundImage: `url('https://firebasestorage.googleapis.com/v0/b/kracr-website.appspot.com/o/slideshow%2F12.jpg?alt=media&token=fc6cafae-2162-40d0-b6ba-12473e359f72')`,\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    backgroundSize: \"cover\",\r\n                  }}\r\n                >\r\n                  <span>Slide 12</span>\r\n                </div>\r\n              </div>\r\n        <div className=\"each-slide\">\r\n                <div\r\n                  style={{\r\n                    backgroundImage: `url('https://firebasestorage.googleapis.com/v0/b/kracr-website.appspot.com/o/slideshow%2F3.jpg?alt=media&token=6bd325f0-b11c-4c1b-9688-2a8bfed17dde')`,\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    backgroundSize: \"cover\",\r\n                  }}\r\n                >\r\n                  <span>Slide 13</span>\r\n                </div>\r\n              </div>\r\n            </Slide>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"Projects\">\r\n        <div className=\"wrapper\">\r\n          <div className=\"title\">Projects</div>\r\n          <div className=\"tiles\">\r\n            {allProjects?.map(({ id, project }) => (\r\n              <div className=\"tile\">\r\n                <div className=\"tile_up\">\r\n                  <div className=\"title-tile\">{project.Title}</div>\r\n                  <div className=\"author-tile\">{project.Authors}</div>\r\n                </div>\r\n                <div className=\"tile_down\">\r\n                  <div className=\"tile_desc\">{project.Description}</div>\r\n                  <div className=\"category-tile\">{project.Category}</div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"more\">\r\n            <Link to=\"/Projects\">Show More</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"News\">\r\n        <div className=\"wrapper\">\r\n          <div className=\"title\">News</div>\r\n          <div className=\"tiles\">\r\n            <div className=\"horizontalScroll\">\r\n              {allNews.map(({id, news}) => {\r\n                var year = new Date(news.Date.seconds * 1000).getFullYear();\r\n                var month = monthNames[new Date(news.Date.seconds * 1000).getMonth()];\r\n                return(\r\n                <div itemId={id} className=\"item\">\r\n                  <div className=\"item-title\">{month + \" \" + year}</div>\r\n                  <div className=\"item-description\">{news.Title}</div>\r\n                </div>)\r\n              }\r\n              ).slice(0, 4)}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"more\">\r\n            <Link to=\"/News\">Show More</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"contactUs\">\r\n        <div className=\"wrapper\">\r\n          <div className=\"left\">\r\n            <div className=\"title\">Contact Us</div>\r\n            <div className=\"form\">\r\n              <div className=\"topRow\">\r\n                <div>\r\n                  <input\r\n                    value={contactEmail}\r\n                    onChange={(e) => setContactEmail(e.target.value)}\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                  />\r\n                  <span className=\"border\"></span>\r\n                </div>\r\n                <div>\r\n                  <input\r\n                    value={contactName}\r\n                    onChange={(e) => setContactName(e.target.value)}\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                  />\r\n                  <span className=\"border\"></span>\r\n                </div>\r\n              </div>\r\n              <div className=\"middleRow\">\r\n                <div>\r\n                  <textarea\r\n                    value={contactMessage}\r\n                    onChange={(e) => setContactMessage(e.target.value)}\r\n                    rows=\"1\"\r\n                    placeholder=\"Message\"\r\n                  ></textarea>\r\n                  <span className=\"border\"></span>\r\n                </div>\r\n              </div>\r\n              <div className=\"bottomRow\">\r\n                <button onClick={sendContact}>Send</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/*<div className=\"right\"></div> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","A:\\Semester 6\\kracr-website\\src\\Components\\Publications\\Publication.jsx",["142","143","144"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../../Page.scss\";\r\nimport db from \"../../firebase\";\r\nimport axios from 'axios';\r\nimport { Description } from \"@material-ui/icons\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\n\r\nfunction Publication() {\r\n  const [allPublications, setAllPublications] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [inputFilter, SetInputFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // db.collection(\"Publications\")\r\n    //   .orderBy(\"Year\", \"desc\")\r\n    //   .onSnapshot((snapshot) => {\r\n\r\n    //     // axios.post(`${process.env.REACT_APP_BASE_URL}/publications/import`,snapshot.docs.map((doc) => ({ id: doc.id, publications: doc.data() })));\r\n\r\n    //     setAllPublications(\r\n    //       snapshot.docs.map((doc) => ({ id: doc.id, publication: doc.data() }))\r\n    //     );\r\n    //   });\r\n\r\n    axios.get(`${process.env.REACT_APP_BASE_URL}/publications`).then(res=>{\r\n      setAllPublications(\r\n        res.data.map((doc)=>({id:doc._id,publication:doc}))\r\n      )\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const tempList = allPublications.filter(({ id, publication }) => {\r\n      return (\r\n        publication.Title.toLowerCase().indexOf(inputFilter.toLowerCase()) !==\r\n          -1 ||\r\n        publication.Description.toLowerCase().indexOf(\r\n          inputFilter.toLowerCase()\r\n        ) !== -1 ||\r\n        publication.Authors.toLowerCase().indexOf(inputFilter.toLowerCase()) !==\r\n          -1\r\n      );\r\n    });\r\n    setFilteredData(tempList);\r\n  }, [inputFilter, allPublications]);\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"page-wrapper\">\r\n        <div className=\"title\">\r\n          <div className=\"left\">Publications</div>\r\n          <div className=\"right\">\r\n            <div>\r\n              <input\r\n                value={inputFilter}\r\n                onChange={(e) => SetInputFilter(e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"Filter\"\r\n              />\r\n              <span className=\"border\"></span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {filteredData?.map(({ id, publication }) => (\r\n          <div className=\"Container\">\r\n            <div className=\"left\">\r\n              <div className=\"title\">{publication.Title}</div>\r\n              <div className=\"subtitle\">{publication.Authors}</div>\r\n              <div className=\"description\">{publication.Description}</div>\r\n            </div>\r\n            <div className=\"right\">\r\n\t\t\t{publication?.PublicationURL == \"\" ?    <> < />  : (<IconButton\r\n                onClick={() => window.open(`${publication.PublicationURL}`)}>\r\n<Description />\r\n              </IconButton>)}\r\n              \r\n              \r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Publication;\r\n","A:\\Semester 6\\kracr-website\\src\\Components\\Team\\Team.jsx",["145","146","147","148","149","150","151","152","153","154","155","156"],"A:\\Semester 6\\kracr-website\\src\\Components\\Projects\\ProjectDetails.jsx",["157","158","159","160","161"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport ImageGallery from 'react-image-gallery';\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport { Description } from \"@material-ui/icons\";\r\nimport \"../../Page.scss\";\r\n// import * as op from '../../Assets';\r\nimport {\r\n  Typography,\r\n  CardContent,\r\n  Card,\r\n  Grid,\r\n  Paper\r\n} from \"@material-ui/core\";\r\nimport { useParams } from \"react-router\";\r\nconst iconPath = process.env.PUBLIC_URL + '/Assets/';\r\n\r\nfunction ProjectDetails() {\r\n\r\n  const { id } = useParams();\r\n  const [projectData, setProjectData] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [subHeadings, setSubHeading] = useState([]);\r\n  useEffect(() => {\r\n    console.log(id);\r\n    axios.get(`${process.env.REACT_APP_BASE_URL}/project/${id}`).then(res => {\r\n      setProjectData(res.data);\r\n      setImages(res.data.images.map((i) => {\r\n        return { \"original\": i, \"thumbnail\": i };\r\n      }));\r\n      setSubHeading(res.data.sections.map(i => {\r\n        return {\r\n          \"subHeading\": i.subHeading, \"description\": i.description, \"images\": i.images.map((j) => {\r\n            return { \"original\": j };\r\n          })\r\n        }\r\n      }));\r\n    });\r\n\r\n  }, []);\r\n  return (\r\n    <div className=\"project-details\">\r\n      <div className=\"page-wrapper\">\r\n        <div className=\"title\">\r\n          {projectData.title}\r\n        </div>\r\n        <div>\r\n          <ImageGallery items={images} />\r\n        </div>\r\n        <div className=\"mainDescription\">{projectData.description}</div>\r\n        <div>\r\n          {subHeadings.map((i) => (\r\n            <div >\r\n              <div className=\"subheading\">{i.subHeading}</div>\r\n              <div className=\"Container\">\r\n              <div className='left'><div className=\"description\">{i.description}</div></div>\r\n              {i.images.length?<ImageGallery className=\"image-gallery1\" items={i.images} />:''}\r\n              </div>\r\n            </div>\r\n          )\r\n          )}\r\n        </div>\r\n        <Grid container spacing={3}>\r\n          <Grid item>\r\n        <Card style={{\r\n          width: 300,\r\n          marginBottom:10,\r\n          backgroundColor: \"grey\",\r\n        }}\r\n        >\r\n          <CardContent>\r\n            <Typography\r\n              style={{ fontSize: 20 }}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n            >\r\n              Team Members\r\n            </Typography>\r\n            <Typography>{projectData.authors}</Typography>\r\n            \r\n           \r\n          </CardContent>\r\n        </Card>\r\n        </Grid>\r\n        <Grid item>\r\n        <Card style={{\r\n          width: 300,\r\n          backgroundColor: \"grey\",\r\n        }}\r\n        >\r\n          <CardContent> \r\n          <Typography\r\n              style={{ fontSize: 20 }}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n            >\r\n              Important Links</Typography>{projectData?.githubUrl == \"\" ?    <> < />  : (<IconButton \r\n                onClick={() => window.open(`${projectData.githubUrl}`)}>\r\n                <GitHubIcon />\r\n                </IconButton>)}\r\n\t\t\t\t\r\n\t\t\t\t  {projectData?.publicationUrl == \"\" ?    <> < />  : (<IconButton \r\n                onClick={() => window.open(`${projectData.ProjepublicationUrlctURL}`)}>\r\n                <Description />\r\n                </IconButton>)}</CardContent>\r\n          </Card>\r\n          </Grid>\r\n            </Grid>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default ProjectDetails;","A:\\Semester 6\\kracr-website\\src\\Components\\Footer\\Footer.jsx",["162"],"import React from \"react\";\r\nimport \"./footer.scss\";\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n  PhoneEnabled,\r\n  Home,\r\n  Mail,\r\n  GitHub,\r\n  LinkedIn,\r\n  Twitter,\r\n  Favorite,\r\n} from \"@material-ui/icons\";\r\n\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"wrapper\">\r\n        {\" \"}\r\n        <div className=\"left\">\r\n          <div className=\"contactItem\">\r\n            <PhoneEnabled /> 01126907455\r\n          </div>\r\n          <div className=\"contactItem\">\r\n            <Home />\r\n            IIITD, New Delhi, 110020\r\n          </div>\r\n          <div className=\"contactItem\">\r\n            {\" \"}\r\n            <Mail /> raghava.mutharaju@iiitd.ac.in\r\n          </div>\r\n        </div>\r\n        <div className=\"middle\">\r\n          We are a part of Indraprastha Institute of Information Technology\r\n          Delhi. <br></br>\r\n          <div>\r\n            © 2021 KRaCR Lab, made by <Favorite />\r\n          </div>\r\n        </div>\r\n        <div className=\"right\">\r\n          <div className=\"GitHub\">\r\n\t\t  <a href=\"https://github.com/kracr\"> \t    \t<GitHub /> </a>\r\n     \r\n\t\t\r\n          </div>\r\n          <div className=\"socialItem\">\r\n\t\t  <a href=\"https://www.linkedin.com/in/kracr-lab-425762204/\">\r\n            <LinkedIn /> </a>\r\n          </div>\r\n          <div className=\"socialItem\">\r\n             <a href=\"https://twitter.com/KracrL\"> </a>\r\n            <Twitter />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","A:\\Semester 6\\kracr-website\\src\\Components\\News\\News.jsx",["163","164","165","166","167","168","169","170","171","172"],"import db from \"../../firebase\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { ExpandMore, ExpandLess, NavigateBefore, NavigateNext, DoubleArrow, Flag } from \"@material-ui/icons\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { ScrollMenu, VisibilityContext } from \"react-horizontal-scrolling-menu\";\r\nimport axios from 'axios';\r\nfunction News() {\r\n    const [allNews, setAllNews] = useState([]);\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [inputFilter, SetInputFilter] = useState(\"\");\r\n    const [nestedNews, setNestedNews] = useState({});\r\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n  \r\n  useEffect(() => {\r\n      // db.collection(\"News\")\r\n      //   .orderBy(\"Date\", \"desc\")\r\n      //   .onSnapshot((snapshot) => {\r\n      //     let check = snapshot.docs.map((doc) => ({ id: doc.id, news: doc.data() }));\r\n      //     console.log(\"checkinggg\",check);\r\n      //     let check2 = check.map((doc) => ({ id: doc.id, news: {Date:doc.news.Date.toDate(),Title:doc.news.Title}}));\r\n      //     // axios.post(`${process.env.REACT_APP_BASE_URL}/news/import`,check2);\r\n      //     setAllNews(\r\n      //         snapshot.docs.map((doc) => ({ id: doc.id, news: doc.data() }))\r\n      //     );\r\n      //   });\r\n      axios.get(`${process.env.REACT_APP_BASE_URL}/news`).then((news)=>{\r\n        setAllNews(\r\n          news.data.map((one)=>\r\n            ({id:one._id,news:one})\r\n          )\r\n        );\r\n      })\r\n      }, []);\r\n\r\n  useEffect(() => {\r\n      const tempList = allNews.filter(({ id, news }) => {\r\n        return (\r\n          news.Title.toLowerCase().indexOf(inputFilter.toLowerCase()) !==\r\n            -1 ||\r\n          (monthNames[new Date(news.Date).getMonth()] + \" \" + new Date(news.Date).getFullYear()).toLowerCase().indexOf(inputFilter.toLowerCase()) !==\r\n            -1\r\n        );\r\n      });\r\n      setFilteredData(tempList);\r\n    }, [inputFilter, allNews]);\r\n\r\n  useEffect(() => {\r\n    var recentNews = filteredData.sort((a, b) => a.Date < b.Date).slice(0, 5).map(({id, news}) => id);\r\n\r\n    var tempNestedNews = {}\r\n    filteredData?.forEach(({id, news}) => {\r\n      var year = new Date(news.Date).getFullYear();\r\n      var month = new Date(news.Date).getMonth();\r\n      if(!tempNestedNews[year]) {\r\n        tempNestedNews[year] = {\r\n          title: year,\r\n          collapsed: true,\r\n          children: {}\r\n        };\r\n      } \r\n      if(!tempNestedNews[year].children[month]) {\r\n        tempNestedNews[year].children[month] = {\r\n          title: monthNames[month],\r\n          collapsed: true,\r\n          children: {}\r\n        };\r\n      }\r\n      tempNestedNews[year].children[month].children[id] = news;\r\n      if(recentNews.find(el => el == id)) {\r\n        tempNestedNews[year].collapsed = nestedNews[year] ? nestedNews[year].collapsed : false;\r\n        tempNestedNews[year].children[month].collapsed = nestedNews[year] && nestedNews[year].children[month] ? nestedNews[year].children[month].collapsed : false;\r\n      }\r\n    });\r\n    setNestedNews(tempNestedNews);\r\n  }, [filteredData])\r\n    \r\n    function LeftArrow() {\r\n      const { isFirstItemVisible, scrollPrev } = React.useContext(VisibilityContext)\r\n    \r\n      return (\r\n        <div className=\"arrow left\" onClick={() => scrollPrev()} >\r\n          <NavigateBefore disabled={isFirstItemVisible} />\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    function RightArrow() {\r\n      const { isLastItemVisible, scrollNext } = React.useContext(VisibilityContext)\r\n    \r\n      return (\r\n        <div className=\"arrow right\"  onClick={() => scrollNext()}>\r\n          <NavigateNext disabled={isLastItemVisible}/>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n\r\n    return (\r\n    <div className=\"page\">\r\n        <div className=\"page-wrapper\">\r\n            <div className=\"title\">\r\n                <div className=\"left\">News</div>\r\n                <div className=\"right\">\r\n                    <div>\r\n                    <input\r\n                        value={inputFilter}\r\n                        onChange={(e) => SetInputFilter(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Filter\"\r\n                    />\r\n                    <span className=\"border\"></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {Object.keys(nestedNews).sort().reverse().map((year) => {\r\n              return (<div className=\"collapsableCategory\">\r\n                <div className=\"header\">\r\n                  <div className=\"title\">{nestedNews[year].title}</div>\r\n                  <IconButton onClick={() => {\r\n                    var temp = {...nestedNews};\r\n                    temp[year].collapsed = !temp[year].collapsed\r\n                    setNestedNews(temp);\r\n                    }}>{nestedNews[year].collapsed ? <ExpandMore /> : <ExpandLess />}</IconButton>\r\n                </div>\r\n\r\n                <div className=\"body\" aria-collapsed={nestedNews[year].collapsed}>\r\n                {Object.keys(nestedNews[year].children).sort().reverse().map((month) => {\r\n                  console.log()\r\n                  return (\r\n                    <div className=\"collapsableCategory\">\r\n                      <div className=\"header\">\r\n                        <div className=\"subtitle\">{nestedNews[year].children[month].title}</div>\r\n                        <IconButton onClick={() => {\r\n                            var temp = {...nestedNews}\r\n                            temp[year].children[month].collapsed = !temp[year].children[month].collapsed\r\n                            setNestedNews(temp);\r\n                            }}>{nestedNews[year].children[month].collapsed ? <ExpandMore /> : <ExpandLess />}</IconButton>\r\n                      </div>\r\n                      <div className=\"body\" aria-collapsed={nestedNews[year].children[month].collapsed}>\r\n                        {Object.keys(nestedNews[year].children[month].children).map((id) => {\r\n                            var news = nestedNews[year].children[month].children[id];\r\n                            return (\r\n                            <div className=\"item\">\r\n                              <Flag /><div className=\"content\">{news.Title}</div>\r\n                            </div>)\r\n                          })}\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                })}\r\n                </div>\r\n              </div>)\r\n            })\r\n            }\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default News;\r\n","A:\\Semester 6\\kracr-website\\src\\Components\\CMS\\LoginCMS\\LoginCMS.jsx",["173"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./LoginCMS.scss\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setUserSignedIn } from \"../../../Actions/index\";\r\n\r\nconst { REACT_APP_Pass } = process.env;\r\n\r\nfunction LoginCMS() {\r\n  const dispatch = useDispatch();\r\n  const [passInput, setpassInput] = useState(\"\");\r\n\r\n  useEffect(() => {}, [passInput]);\r\n\r\n  const signIn = () => {\r\n    // if (passInput === REACT_APP_Pass) {\r\n      dispatch(setUserSignedIn(true));\r\n    // } else {\r\n    //   window.alert(\"Wrong Pass!! Please Try Again\");\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"loginContainer\">\r\n        <h1>Enter Password for KRaCR CMS</h1>\r\n        <div>\r\n          <input\r\n            value={passInput}\r\n            onChange={(e) => setpassInput(e.target.value)}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n          <span className=\"border\"></span>\r\n        </div>\r\n\r\n        <Button onClick={signIn}>Sign In</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginCMS;\r\n","A:\\Semester 6\\kracr-website\\src\\Components\\NavBar\\Navbar.jsx",[],"A:\\Semester 6\\kracr-website\\src\\Components\\CMS\\HomeCMS\\CMS.jsx",[],"A:\\Semester 6\\kracr-website\\src\\Components\\Chatbot\\chatbot.jsx",["174","175","176","177","178"],"import Message from \"./message\";\r\nimport MessageInputBox from \"./messageInputBox\";\r\nimport React, { Component } from \"react\";\r\nimport {Textsms} from \"@material-ui/icons\"\r\nimport \"./chatbot.css\";\r\n\r\nclass Chatbot extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.fetchSources = this.fetchSources.bind(this);\r\n    this.fetchSources();\r\n    this.newUserMessage = this.newUserMessage.bind(this);\r\n    this.handleMessageAfterStart = this.handleMessageAfterStart.bind(this);\r\n    this.handleMessageAfterAnswered = this.handleMessageAfterAnswered.bind(\r\n      this\r\n    );\r\n    this.handleMessageAfterCorrectedText = this.handleMessageAfterCorrectedText.bind(\r\n      this\r\n    );\r\n    this.sendAnswer = this.sendAnswer.bind(this);\r\n    this.askAboutTopics = this.askAboutTopics.bind(this);\r\n  }\r\n  state = {\r\n    messages: [\r\n      {\r\n        text: \"Hello! Please enter your question!\",\r\n        author: \"bot\",\r\n      },\r\n    ],\r\n    loading: false,\r\n    sources: [{name: \"placement policy\", link: \"https://www.google.com\"}]\r\n  };\r\n  data = {\r\n    state: \"start\",\r\n    query: null,\r\n    answerChosen: 0,\r\n    topics: [],\r\n    sentences: [],\r\n  };\r\n  render() {\r\n    let typing = this.state.loading ? (\r\n      <div className=\"typingIcon\"><Textsms/></div>\r\n    ) : null;\r\n    let inputBox = (\r\n      <MessageInputBox key=\"\" newUserMessage={this.newUserMessage} />\r\n    );\r\n    if (this.state.messages[this.state.messages.length - 1].type == \"mcq\") {\r\n      inputBox = null;\r\n    } else {\r\n      inputBox = (\r\n        <MessageInputBox key=\"\" newUserMessage={this.newUserMessage} />\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"chatbot page\">\r\n        <div className=\"chatScreen\">\r\n          <div className=\"topBar\">\r\n            <div className=\"topBarText\">@iiitd_policybot</div>\r\n          </div>\r\n            <div className=\"window\">\r\n              <div className=\"chat\">\r\n                {typing}\r\n                {this.state.messages\r\n                  .map((message, idx) => (\r\n                    <Message\r\n                      key={idx}\r\n                      message={message}\r\n                      newUserMessage={this.newUserMessage}\r\n                    />\r\n                  ))\r\n                  .reverse()}\r\n              </div>\r\n              {inputBox}\r\n            </div>\r\n          </div>\r\n          <div className=\"chatbotInfo\">\r\n            <div className=\"chatbotInfoScreen\">              \r\n            <div className=\"chatbotInfoTitle\">About Policy Chatbot</div>\r\n            <div className=\"chatbotInfoBody\">\r\n              This Policy Chatbot aims to answer student questions related to IIITD's policies. It can answer questions regarding policies ranging from Admissions, Registration and credits, teaching and evaluation, graduation requirements, hostels, placements, plagiarism, etc. \r\n            </div>\r\n            <div className=\"chatbotInfoTitle\">Sources</div>\r\n            <div className=\"chatbotInfoBody\">\r\n              The sources of information that this chatbot uses are:\r\n              <ul>\r\n                {this.state.sources.map((source) => <li>{source.name} (<a href={source.link}>Link</a>)</li> )}\r\n              </ul>\r\n            </div>\r\n            <div className=\"chatbotInfoTitle\">Interactive View</div>\r\n              <div className=\"chatbotInfoBody\">\r\n                <a href=\"/interactivesearch\">Explore Interactive View</a>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async fetchSources() {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n    };\r\n    let response = await fetch(\r\n      \"http://localhost:8080/sources\",\r\n      requestOptions\r\n    );\r\n    let data = await response.json();\r\n    this.setState({sources: data['sources']})\r\n    console.log(data['sources']);\r\n  }\r\n\r\n  clearData() {\r\n    this.data = {\r\n      state: \"start\",\r\n      query: null,\r\n      answerChosen: 0,\r\n      topics: [],\r\n      sentences: [],\r\n      correctedText: \"\",\r\n    };\r\n  }\r\n\r\n  removeAnswerFromData() {\r\n    if (this.data.topics.length > 0) {\r\n      this.data.topics.splice(this.data.answerChosen, 1);\r\n    }\r\n    this.data.sentences.splice(this.data.answerChosen, 1);\r\n  }\r\n\r\n  newUserMessage(message) {\r\n    this.setState({ messages: [...this.state.messages, message] }, () => {\r\n      if (this.data.state === \"start\") {\r\n        this.handleMessageAfterStart(message);\r\n      } else if (this.data.state === \"correctedText\") {\r\n        this.handleMessageAfterCorrectedText(message);\r\n      } else if (this.data.state === \"answered\") {\r\n        this.handleMessageAfterAnswered(message);\r\n      }\r\n    });\r\n  }\r\n  async handleMessageAfterStart(message) {\r\n    this.setState({ loading: true });\r\n    this.data.state = \"correctedText\";\r\n    this.data.query = message.text;\r\n\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ text: this.data.query }),\r\n    };\r\n    let response = await fetch(\r\n      \"http://localhost:8080/correct_text\",\r\n      requestOptions\r\n    );\r\n    let data = await response.json();\r\n    this.data.correctedText = data.corrected_text;\r\n\r\n    this.setState({ loading: false });\r\n    console.log(this.data.correctedText);\r\n\r\n    if (this.data.correctedText == this.data.query) {\r\n      this.handleMessageAfterCorrectedText(\"No\");\r\n    } else {\r\n      this.setState({\r\n        messages: [\r\n          ...this.state.messages,\r\n          {\r\n            text: `Did you mean: \"${this.data.correctedText}\"? `,\r\n            author: \"bot\",\r\n            type: \"mcq\",\r\n            options: [\"No\", \"Yes\"],\r\n          },\r\n        ],\r\n      });\r\n      this.removeAnswerFromData();\r\n    }\r\n  }\r\n\r\n  async handleMessageAfterCorrectedText(message) {\r\n    this.setState({ loading: true });\r\n    if (message.text == \"Yes\") {\r\n      this.data.query = this.data.correctedText;\r\n    }\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ query: this.data.query }),\r\n    };\r\n    let response = await fetch(\r\n      \"http://localhost:8080/get_answer\",\r\n      requestOptions\r\n    );\r\n    let data = await response.json();\r\n    this.data.sentences = data.sentences;\r\n    this.setState({ loading: false });\r\n    this.sendAnswer(this.data.sentences);\r\n  }\r\n\r\n  displayAllAnswers() {\r\n    this.setState({\r\n      messages: [\r\n        ...this.state.messages,\r\n        ...this.data.sentences.map((sentence) => {\r\n          return {\r\n            text: sentence.sentence,\r\n            author: \"bot\",\r\n            type: \"answer\",\r\n            sentence: sentence,\r\n          };\r\n        }),\r\n        {\r\n          text: \"Please contact the admin department for more information!\",\r\n          author: \"bot\",\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  async handleMessageAfterAnswered(message) {\r\n    if (message.text == \"Yes\") {\r\n      this.setState({\r\n        messages: [\r\n          ...this.state.messages,\r\n          {\r\n            text: \"Happy to help!\",\r\n            author: \"bot\",\r\n          },\r\n        ],\r\n      });\r\n    } else {\r\n      if (this.data.sentences.length > 0) {\r\n        this.displayAllAnswers();\r\n      } else {\r\n        this.setState({\r\n          messages: [\r\n            ...this.state.messages,\r\n            {\r\n              text: \"Please contact the admin department for more information!\",\r\n              author: \"bot\",\r\n            },\r\n          ],\r\n        });\r\n      }\r\n    }\r\n    this.clearData();\r\n  }\r\n\r\n  sendAnswer() {\r\n    if (this.data.sentences == 0) {\r\n      this.setState({\r\n        messages: [\r\n          ...this.state.messages,\r\n          {\r\n            text: \"I'm sorry, I don't know how to respond to that!\",\r\n            author: \"bot\",\r\n          },\r\n        ],\r\n      });\r\n      this.data.state = \"start\";\r\n    } else {\r\n      this.setState({\r\n        messages: [\r\n          ...this.state.messages,\r\n          {\r\n            text: this.data.sentences[this.data.answerChosen].sentence,\r\n            author: \"bot\",\r\n            type: \"answer\",\r\n            sentence: this.data.sentences[this.data.answerChosen],\r\n          },\r\n          {\r\n            text: \"Did you find the answer useful?\",\r\n            author: \"bot\",\r\n            type: \"mcq\",\r\n            options: [\"No\", \"Yes\"],\r\n          },\r\n        ],\r\n      });\r\n      this.removeAnswerFromData();\r\n      this.data.state = \"answered\";\r\n    }\r\n  }\r\n\r\n  askAboutTopics() {\r\n    let topics = [\r\n      ...new Set(this.data.sentences.map((sentence) => sentence.topic)),\r\n    ];\r\n    this.data.topics = topics;\r\n    if (this.data.topics.length <= 1) {\r\n      this.handleMessageAfterTopics({\r\n        text: \"1\",\r\n      });\r\n      return;\r\n    }\r\n    let question = `Which of the following is the question related to:`;\r\n    this.setState({\r\n      messages: [\r\n        ...this.state.messages,\r\n        {\r\n          text: question,\r\n          author: \"bot\",\r\n          type: \"mcq\",\r\n          options: this.data.topics,\r\n        },\r\n      ],\r\n    });\r\n    this.data.state = \"topics\";\r\n  }\r\n}\r\n\r\nexport default Chatbot;\r\n","A:\\Semester 6\\kracr-website\\src\\Components\\Projects\\Project.jsx",["179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205"],"import React, { useState, useEffect } from \"react\";\r\nimport \"../../Page.scss\";\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport db from \"../../firebase\";\r\nimport { Description } from \"@material-ui/icons\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nfunction Project() {\r\n  const [allProjects, setAllProjects] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [inputFilter, SetInputFilter] = useState(\"\");\r\n\r\n  const [typeA, setTypeA] = useState(false);\r\n  const [typeB, setTypeB] = useState(false);\r\n  const [typeC, setTypeC] = useState(false);\r\n  const [typeD, setTypeD] = useState(false);\r\n  const [typeE, setTypeE] = useState(false);\r\n  const [typeF, setTypeF] = useState(false);\r\n\r\n  useEffect(() => {\r\n\r\n    // db.collection(\"Projects\")\r\n    //   .orderBy(\"Title\", \"asc\")\r\n    //   .onSnapshot((snapshot) => { \r\n    //     axios.post(`${process.env.REACT_APP_BASE_URL}/project/import`,snapshot.docs.map((doc) => ({ id: doc.id, project: doc.data() })));\r\n    //   }\r\n    //   );\r\n    axios.get(`${process.env.REACT_APP_BASE_URL}/project`).then(res=> {\r\n\r\n    //     axios.post(`http://192.168.1.166:5000/project/import`,snapshot.docs.map((doc) => ({ id: doc.id, project: doc.data() })));\r\n    //   }\r\n    //   );\r\n\r\n      console.log(res);\r\n        setAllProjects(\r\n          res.data.map((doc) => ({ id: doc._id, project: doc }))\r\n        );\r\n        res.data.map((doc) => {\r\n          if (doc.category == \"Ontology Modelling and Enrichment\") {\r\n            setTypeA(true);\r\n          } else if (doc.category == \"Description Logic Reasoning\") {\r\n            setTypeB(true);\r\n          } else if (doc.category == \"Knowledge Graphs\") {\r\n            setTypeC(true);\r\n          } else if (doc.category == \"SPARQL Querying\") {\r\n            setTypeD(true);\r\n          } else if (doc.category == \"Semantic Web Applications\") {\r\n            setTypeE(true);\r\n          } else if (doc.category == \"Others\") {\r\n            setTypeF(true);\r\n          }\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const tempList = allProjects.filter(({ id, project }) => {\r\n      return (\r\n        project.title ||\r\n        project.description ||\r\n        project.authors \r\n      );\r\n    });\r\n    setFilteredData(tempList);\r\n  }, [inputFilter, allProjects]);\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"page-wrapper\">\r\n        <div className=\"title\">\r\n          <div className=\"left\">Projects</div>\r\n          <div className=\"right\">\r\n            <div>\r\n              <input\r\n                value={inputFilter}\r\n                onChange={(e) => SetInputFilter(e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"Filter\"\r\n              />\r\n              <span className=\"border\"></span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"collapsableCategory\">\r\n          {typeA ? (\r\n            <div className=\"title\">Ontology Modelling and Enrichment</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {filteredData\r\n            ?.filter(\r\n              ({ id, project }) =>\r\n                project.category == \"Ontology Modelling and Enrichment\"\r\n            )\r\n            .map(({ id, project }) => (\r\n              <div className=\"Container\">\r\n                <div className=\"left\">\r\n                  <div className=\"title\">{project.title}</div>\r\n                  <div className=\"subtitle\">{project.authors}</div>\r\n                  <div className=\"description\">{project.description}</div>\r\n                  <div>\r\n                  <Link to={`Projects/${project._id}`} style={{ textDecoration: \"none\" }}>\r\n                  <a className=\"more\">View more</a>\r\n                  </Link>\r\n                  </div>\r\n                  \r\n\t\t\t\t  {project?.githubUrl == \"\" ?    <> < />  : (<IconButton \r\n                onClick={() => window.open(`${project.githubUrl}`)}>\r\n                <GitHubIcon />\r\n                </IconButton>)}\r\n\t\t\t\t\r\n\t\t\t\t{project?.publicationUrl == \"\" ?    <> < />  : (<IconButton \r\n                onClick={() => window.open(`${project.ProjepublicationUrlctURL}`)}>\r\n                <Description />\r\n                </IconButton>)}\r\n                \r\n\t\t\t\t</div>\r\n\r\n                \r\n              </div>\r\n            ))}\r\n        </div>\r\n        <div className=\"collapsableCategory\">\r\n          {typeB ? (\r\n            <div className=\"title\">Description Logic Reasoning</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {filteredData\r\n            ?.filter(\r\n              ({ id, project }) =>\r\n                project.category == \"Description Logic Reasoning\"\r\n            )\r\n            .map(({ id, project }) => (\r\n              <div className=\"Container\">\r\n                <div className=\"left\">\r\n                  <div className=\"title\">{project.title}</div>\r\n                  <div className=\"author\">{project.authors}</div>\r\n                  <div className=\"description\">{project.description}</div>\r\n\t\t\t\t   {project?.githubUrl == \"\" ?    <> < />  : (<IconButton\r\n                onClick={() => window.open(`${project.githubUrl}`)}>\r\n                <GitHubIcon />\r\n                </IconButton>)}\r\n\t\t\t\t\r\n\t\t\t\t{project?.publicationUrl == \"\" ?    <> < />  : (<IconButton\r\n                onClick={() => window.open(`${project.publicationUrl}`)}>\r\n                <Description />\r\n                </IconButton>)}\r\n                </div>\r\n              \r\n              </div>\r\n            ))}\r\n        </div>\r\n        <div className=\"collapsableCategory\">\r\n          {typeC ? <div className=\"title\">Knowledge Graphs</div> : \"\"}\r\n\r\n          {filteredData\r\n            ?.filter(\r\n              ({ id, project }) =>\r\n                project.category == \"Knowledge Graphs\"\r\n            )\r\n            .map(({ id, project }) => (\r\n              <div className=\"Container\">\r\n                <div className=\"left\">\r\n                  <div className=\"title\">{project.title}</div>\r\n                  <div className=\"author\">{project.authors}</div>\r\n                  <div className=\"description\">{project.description}</div>\r\n\t\t\t\t   {project?.githubUrl == \"\" ?    <> < />  : (<IconButton\r\n                onClick={() => window.open(`${project.githubUrl}`)}>\r\n                <GitHubIcon />\r\n                </IconButton>)}\r\n\t\t\t\t\r\n\t\t\t\t{project?.publicationUrl == \"\" ?    <> < />  : (<IconButton\r\n                onClick={() => window.open(`${project.publicationUrl}`)}>\r\n                <Description />\r\n                </IconButton>)}\r\n                </div>\r\n\r\n              </div>\r\n            ))}\r\n        </div>\r\n        <div className=\"collapsableCategory\">\r\n          {typeD ? <div className=\"title\">SPARQL Querying</div> : \"\"}\r\n\r\n          {filteredData\r\n            ?.filter(\r\n              ({ id, project }) => project.category == \"SPARQL Querying\"\r\n            )\r\n            .map(({ id, project }) => (\r\n              <div className=\"Container\">\r\n                <div className=\"left\">\r\n                  <div className=\"title\">{project.title}</div>\r\n                  <div className=\"author\">{project.authors}</div>\r\n                  <div className=\"description\">{project.description}</div>\r\n\t\t\t\t   {project?.githubUrl == \"\" ?    <> < />  : (<IconButton\r\n                onClick={() => window.open(`${project.githubUrl}`)}>\r\n                <GitHubIcon />\r\n                </IconButton>)}\r\n\t\t\t\t\r\n\t\t\t\t{project?.publicationUrl == \"\" ?    <> < />  : (<IconButton\r\n                onClick={() => window.open(`${project.publicationUrl}`)}>\r\n                <Description />\r\n                </IconButton>)}\r\n                </div>\r\n\r\n              </div>\r\n            ))}\r\n        </div>\r\n        <div className=\"collapsableCategory\">\r\n          {typeE ? <div className=\"title\">Semantic Web Applications</div> : \"\"}\r\n          {filteredData\r\n            ?.filter(\r\n              ({ id, project }) =>\r\n                project.category == \"Semantic Web Applications\"\r\n            )\r\n            .map(({ id, project }) => (\r\n              <div className=\"Container\">\r\n                <div className=\"left\">\r\n                  <div className=\"title\">{project.title}</div>\r\n                  <div className=\"author\">{project.authors}</div>\r\n                  <div className=\"description\">{project.description}</div>\r\n\t\t\t\t   {project?.githubUrl == \"\" ?    <> < />  : (<IconButton\r\n                onClick={() => window.open(`${project.githubUrl}`)}>\r\n                <GitHubIcon />\r\n                </IconButton>)}\r\n\t\t\t\t\r\n\t\t\t\t{project?.publicationUrl == \"\" ?    <> < />  : (<IconButton\r\n                onClick={() => window.open(`${project.publicationUrl}`)}>\r\n                <Description />\r\n                </IconButton>)}\r\n                </div>\r\n\r\n              </div>\r\n            ))}\r\n        </div>\r\n        <div className=\"collapsableCategory\">\r\n          {typeF ? <div className=\"title\">Others</div> : \"\"}\r\n          {filteredData\r\n            ?.filter(({ id, project }) => project.category == \"Others\")\r\n            .map(({ id, project }) => (\r\n              <div className=\"Container\">\r\n                <div className=\"left\">\r\n                  <div className=\"title\">{project.title}</div>\r\n                  <div className=\"author\">{project.authors}</div>\r\n                  <div className=\"description\">{project.description}</div>\r\n\t\t\t\t   {project?.githubUrl == \"\" ?    <> < />  : (<IconButton\r\n                onClick={() => window.open(`${project.githubUrl}`)}>\r\n                <GitHubIcon />\r\n                </IconButton>)}\r\n\t\t\t\t\r\n\t\t\t\t{project?.publicationUrl == \"\" ?    <> < />  : (<IconButton\r\n                onClick={() => window.open(`${project.publicationUrl}`)}>\r\n                <Description />\r\n                </IconButton>)}\r\n                </div>\r\n\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Project;\r\n","A:\\Semester 6\\kracr-website\\src\\firebase.js",[],"A:\\Semester 6\\kracr-website\\src\\Actions\\index.js",[],"A:\\Semester 6\\kracr-website\\src\\Components\\Chatbot\\messageInputBox.jsx",[],"A:\\Semester 6\\kracr-website\\src\\Components\\Chatbot\\message.jsx",["206","207","208","209","210","211"],"import React, { Component } from \"react\";\r\nimport { ButtonGroup, } from \"@material-ui/core\";\r\nimport { ExpandLess, ExpandMore } from '@material-ui/icons'\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport \"./chatbot.css\";\r\n\r\n\r\nclass Message extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.sendOptions = this.sendOptions.bind(this);\r\n    this.handleExpand = this.handleExpand.bind(this);\r\n  }\r\n  state = {\r\n    allowOptionSelect: true,\r\n    expand: false,\r\n    neighbouring_sentences: [],\r\n    document: {\r\n      name: \"\",\r\n      source: \"\",\r\n    },\r\n  };\r\n\r\n  data = {\r\n    options: new Set([]),\r\n  };\r\n\r\n  render() {\r\n    let card_class = \"messageCard margin \" + this.props.message.author;\r\n\r\n    let mcq = null;\r\n    if (this.props.message.type == \"mcq\" && this.state.allowOptionSelect) {\r\n      mcq = (\r\n        <div className=\"mcq\">\r\n          <ButtonGroup>\r\n            {this.props.message.options.map((option) => (\r\n              <button\r\n                disabled={!this.state.allowOptionSelect}\r\n                onClick={() => this.sendOptions(option)}\r\n                type=\"button\"\r\n                className=\"btn btn-secondary btn-lg margin\"\r\n                style={{ width: \"15vw\" }}\r\n              >\r\n                {option}\r\n              </button>\r\n            ))}\r\n          </ButtonGroup>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let expand_button = null;\r\n    if (this.props.message.type == \"answer\") {\r\n      if (this.state.expand) {\r\n        expand_button = (\r\n          <IconButton\r\n            onClick={() => this.handleExpand(false)}\r\n            className=\"margin pull-right\"\r\n          > <ExpandLess /> </IconButton>\r\n        );\r\n      } else {\r\n        expand_button = (\r\n          <IconButton\r\n            onClick={() => this.handleExpand(true)}\r\n            className=\"margin pull-right\"\r\n          >\r\n            <ExpandMore />\r\n        </IconButton>\r\n        );\r\n      }\r\n    }\r\n    let message_body = null;\r\n    if (this.props.message.type == \"answer\" && this.state.expand) {\r\n      message_body = (\r\n        <div>\r\n          <p>\r\n            {this.state.neighbouring_sentences.map((sentence) => {\r\n              if (sentence.s_id == this.props.message.sentence.s_id) {\r\n                return (\r\n                  <span>\r\n                    <b>{sentence.sentence} </b>\r\n                  </span>\r\n                );\r\n              } else {\r\n                return <span>{sentence.sentence} </span>;\r\n              }\r\n            })}\r\n          </p>\r\n          <div className=\"answerSource\">\r\n            <span>Source: </span>\r\n            <a href={this.state.document.source}>{this.state.document.name}</a>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      message_body = (\r\n        <span>\r\n          {this.props.message.type == \"answer\"\r\n            ? \"...\" + this.props.message.text + \"...\"\r\n            : this.props.message.text}\r\n        </span>\r\n      );\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.message.author}>\r\n          <div className={card_class}>\r\n            {expand_button}\r\n            {message_body}\r\n          </div>\r\n          <div>\r\n            <center>{mcq}</center>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  sendOptions(option) {\r\n    this.props.newUserMessage({\r\n      text: `${[option]}`,\r\n      author: `user`,\r\n    });\r\n    this.data.options = new Set([]);\r\n    this.setState({ allowOptionSelect: false });\r\n  }\r\n\r\n  async handleExpand(expand) {\r\n    this.setState({ expand: expand });\r\n    if (expand && this.state.neighbouring_sentences.length == 0) {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          sentence: this.props.message.sentence,\r\n        }),\r\n      };\r\n      let response = await fetch(\r\n        \"http://localhost:8080/get_sentence_details\",\r\n        requestOptions\r\n      );\r\n      let data = await response.json();\r\n      this.setState({\r\n        neighbouring_sentences: data.neighbouring_sentences,\r\n        document: data.document,\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Message;\r\n","A:\\Semester 6\\kracr-website\\src\\Components\\CMS\\TeamCMS\\TeamCMS.jsx",["212","213","214","215","216","217","218","219","220"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./teamCMS.scss\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { storage } from \"../../../firebase\";\r\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\nimport db from \"../../../firebase\";\r\nimport firebase from \"firebase\";\r\nimport { DeleteForever } from \"@material-ui/icons\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport TeamCMSMember from \"./TeamCMSMember\";\r\nimport axios from \"axios\";\r\n\r\nfunction TeamCMS() {\r\n  //Getting Team Members\r\n  const [teamMembers, setTeamMembers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`${process.env.REACT_APP_BASE_URL}/team`).then((team)=>{\r\n      setTeamMembers(\r\n        team.data.map((one)=> ({ id: one._id, member: one }))\r\n      );\r\n    })\r\n    // db.collection(\"TeamMembers\").onSnapshot((snapshot) => {\r\n    //   setTeamMembers(\r\n\r\n    //     snapshot.docs.map((doc) => ({ id: doc.id, member: doc.data() }))\r\n    //   );\r\n    // });\r\n  }, []);\r\n\r\n  //Adding Team Members\r\n  const [name, setName] = useState(\"\");\r\n  const [designation, setDesignation] = useState(\"\");\r\n  const [interest, setInterest] = useState(\"\");\r\n  const [webpage, setWebpage] = useState(\"\");\r\n  const [github, setGithub] = useState(\"\");\r\n  const [twitter, setTwitter] = useState(\"\");\r\n  const [linkedin, setLinkedin] = useState(\"\");\r\n  const [mail, setMail] = useState(\"\");\r\n\r\n  const addTeamMember = async (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      name === \"\" ||\r\n      designation === \"\"\r\n    ) {\r\n      window.alert(\"Please fill both name and designation\");  \r\n    } \r\n\telse {\r\n      e.preventDefault();\r\n\t  if (\r\n\t  \r\n\t    file === null\r\n\t\t)\r\n\t\t{\r\n      const payload = {\r\n              Name: name,\r\n              Interests: interest,\r\n              Designation: designation,\r\n              Position: category,\r\n\t\t\t        webpageLink: webpage,\r\n              githubLink: github,\r\n              twitterLink: twitter,\r\n              linkedinLink: linkedin,\r\n              Mail: mail,\r\n              ImageURL: url\r\n      }\r\n      axios.post(`${process.env.REACT_APP_BASE_URL}/team/add/`, payload).then(res=>{window.alert(\"New Member Added\")})\r\n\t\t\t//  db.collection(\"TeamMembers\").doc().set({\r\n      //         Name: name,\r\n      //         Interests: interest,\r\n      //         Designation: designation,\r\n      //         Position: category,\r\n\t\t\t//   webpageLink: webpage,\r\n      //         githubLink: github,\r\n      //         twitterLink: twitter,\r\n      //         linkedinLink: linkedin,\r\n      //         Mail: mail,\r\n      //         ImageURL: url,\r\n      //         timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      //       });\r\n            setName(\"\");\r\n            setInterest(\"\");\r\n\t\t\tsetWebpage(\"\");\r\n            setTwitter(\"\");\r\n            setLinkedin(\"\");\r\n            setGithub(\"\");\r\n            setDesignation(\"\");\r\n            setMail(\"\");\r\n            setFile(null);\r\n            e.target.value = null;\r\n\t\t\tsetURL(\"\");\r\n         \r\n    }\r\n\t\telse {\r\n\t\t\t  let uploadTask = storage.ref(`/Team/${file.name}`).put(file);\r\n      uploadTask.on(\"state_changed\", console.log, console.error, () => {\r\n        storage\r\n          .ref(\"Team\")\r\n          .child(file.name)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            setFile(null);\r\n            setURL(url);\r\n            const uploadTask = storage.ref(`/Team/${file.name}`).put(file);\r\n            const payload = {\r\n              Name: name,\r\n              Interests: interest,\r\n              Designation: designation,\r\n              Position: category,\r\n\t\t\t        webpageLink: webpage,\r\n              githubLink: github,\r\n              twitterLink: twitter,\r\n              linkedinLink: linkedin,\r\n              Mail: mail,\r\n              ImageURL: url\r\n      }\r\n      axios.post(`${process.env.REACT_APP_BASE_URL}/team/add/`, payload).then(res=>{window.alert(\"New Member Added\")})\r\n        //     db.collection(\"TeamMembers\").doc().set({\r\n        //       Name: name,\r\n        //       Interests: interest,\r\n        //       Designation: designation,\r\n        //       Position: category,\r\n\t\t\t  // webpageLink: webpage,\r\n        //       githubLink: github,\r\n        //       twitterLink: twitter,\r\n        //       linkedinLink: linkedin,\r\n        //       Mail: mail,\r\n        //       ImageURL: url,\r\n        //       timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        //     });\r\n            setName(\"\");\r\n            setInterest(\"\");\r\n\t\t\tsetWebpage(\"\");\r\n            setTwitter(\"\");\r\n            setLinkedin(\"\");\r\n            setGithub(\"\");\r\n            setDesignation(\"\");\r\n            setMail(\"\");\r\n            setFile(null);\r\n            e.target.value = null;\r\n\t\t\tsetURL(\"\");\r\n          });\r\n\t\t});\r\n           \r\n\t\t\r\n\t\t}\r\n    }\r\n  };\r\n\r\n  //Deleting Member\r\n\r\n  const deleteMember = (id) => {\r\n    db.collection(\"TeamMembers\").doc(id).delete();\r\n  };\r\n\r\n  //UPLOADING FILE STARTED\r\n  const [file, setFile] = useState(null);\r\n  const [url, setURL] = useState(\"\");\r\n  function handleImageChange(e) {\r\n    setFile(e.target.files[0]);\r\n  }\r\n  const handleUpload = async (e) => {\r\n    const uploadTask = await storage.ref(`/Team/${file.name}`).put(file);\r\n    uploadTask.on(\"state_changed\", console.log, console.error, () => {\r\n      storage\r\n        .ref(\"Team\")\r\n        .child(file.name)\r\n        .getDownloadURL()\r\n        .then((url) => {\r\n          setFile(null);\r\n          setURL(url);\r\n        });\r\n    });\r\n  };\r\n  //UPLOADING FILE ENDING\r\n  //DROP DOWN MENU STARTED\r\n  const useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      display: \"block\",\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  const [category, setcategory] = React.useState(\"B.Tech\");\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    setcategory(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const validate = (text) => {\r\n    console.log(text);\r\n    let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    if (reg.test(text) === false) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  //DROP DOWN MENU ENDS\r\n  return (\r\n    <div className=\"teamCMSwrapper\">\r\n      <div className=\"addMember\">\r\n        <div className=\"title\">Add Member</div>\r\n        <form action=\"\">\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              placeholder=\"Name *\" \r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={designation}\r\n              onChange={(e) => setDesignation(e.target.value)}\r\n              placeholder=\"Designation *\"\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={interest}\r\n              onChange={(e) => setInterest(e.target.value)}\r\n              placeholder=\"Interests\"\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"file\"\r\n              placeholder=\"Image\"\r\n              onChange={handleImageChange}\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={webpage}\r\n              onChange={(e) => setWebpage(e.target.value)}\r\n              placeholder=\"Webpage Link\"\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={github}\r\n              onChange={(e) => setGithub(e.target.value)}\r\n              placeholder=\"Github Link\"\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={twitter}\r\n              onChange={(e) => setTwitter(e.target.value)}\r\n              placeholder=\"Twitter Link\"\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={linkedin}\r\n              onChange={(e) => setLinkedin(e.target.value)}\r\n              placeholder=\"Linkedin Link\"\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"email\"\r\n              value={mail}\r\n              onChange={(e) => setMail(e.target.value)}\r\n              placeholder=\"Email\"\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n          <div>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-controlled-open-select-label\">\r\n                category *\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-controlled-open-select-label\"\r\n                id=\"demo-controlled-open-select\"\r\n                open={open}\r\n                onClose={handleClose}\r\n                onOpen={handleOpen}\r\n                value={category}\r\n                onChange={handleChange}\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>None</em>\r\n                </MenuItem>\r\n                <MenuItem value={\"Faculty\"}>Faculty</MenuItem>\r\n                <MenuItem value={\"PhD\"}>Ph.D</MenuItem>\r\n                <MenuItem value={\"Masters\"}>Masters</MenuItem>\r\n                <MenuItem value={\"BTech\"}>B.Tech</MenuItem>\r\n              <MenuItem value={\"Alumni\"}>Alumni</MenuItem>\r\n              <MenuItem value={\"RA\"}>RA</MenuItem>\r\n              <MenuItem value={\"Intern\"}>Intern</MenuItem>\r\n              <MenuItem value={\"Collaborator\"}>Collaborator</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div>\r\n            <button onClick={addTeamMember}>Add</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {teamMembers?.map(({ id, member }) => (\r\n        <TeamCMSMember member={member} id={id}></TeamCMSMember>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TeamCMS;\r\n","A:\\Semester 6\\kracr-website\\src\\Components\\CMS\\ProjectCMS\\ProjectCMS.jsx",["221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./ProjectCMS.scss\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { storage } from \"../../../firebase\";\r\nimport db from \"../../../firebase\";\r\nimport firebase from \"firebase\";\r\nimport { DeleteForever, Description } from \"@material-ui/icons\";\r\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\nimport MultiImageInput from 'react-multiple-image-input';\r\nimport  axios from \"axios\";\r\n\r\nfunction ProjectCMS() {\r\n  //Getting Team Members\r\n  const [allpublications, setAllPublications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // db.collection(\"Projects\")\r\n    //   .orderBy(\"Title\", \"asc\")\r\n    //   .onSnapshot((snapshot) => {\r\n    //     setAllPublications(\r\n    //       snapshot.docs.map((doc) => ({ id: doc.id, publication: doc.data() }))\r\n    //     );\r\n    //   });\r\n    console.log(formValues);\r\n    axios.get(`${process.env.REACT_APP_BASE_URL}/project`).then((projects)=>{\r\n      setAllPublications(\r\n        projects.data.map((one)=>\r\n        {\r\n          // var year = new Date(one.Date).getFullYear();\r\n          // var month = monthNames[new Date(one.Date).getMonth()];\r\n                  // console.log(one,\"hello\");\r\n            return ({ id: one._id, publication: one })\r\n        }\r\n          \r\n        )\r\n      );\r\n    })\r\n  }, []);\r\n\r\n  //Adding Team Members\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [year, setYear] = useState(\"\");\r\n  const [github, setGithub] = useState(\"\");\r\n  const [formValues, setFormValues] = useState([{ subheading: \"\", subheadingdetails : \"\", images : []}]);\r\n  // const [sections, setSections] = useState([{subheading:\"\", description : \"\", images : []}]);\r\n  const [images, setImages] = useState([]);\r\n  const [imgUrl,setimgUrl] = useState([]);\r\n  const [images2, setImages2] = useState({});\r\n\r\n  const addTeamMember = async(e) => {\r\n    e.preventDefault();\r\n    if (title === \"\" || description === \"\") {\r\n      window.alert(\"Please fill Title and Description\");\r\n    } else {\r\n      \r\n    let sections = [];\r\n    let bannerImagesURL = [];\r\n    // console.log(formValues);\r\n    let bannerImages = [...images];\r\n    bannerImages?.map((img)=>\r\n    {\r\n      \r\n      let uploadTask = storage.ref(`/Projects/${title}/${img.name}`).put(img);\r\n      uploadTask.on(\"state_changed\", console.log, console.error, () => {\r\n        storage\r\n          .ref(`Projects/${title}`)\r\n          .child(img.name)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            bannerImagesURL.push(url)\r\n            // setimgUrl(newimgURL);\r\n            const uploadTask = storage.ref(`/Projects/${title}/${img.name}`).put(img);\r\n            \r\n          });\r\n      });\r\n    })\r\n    formValues?.map((sub)=>\r\n    {\r\n      let imgURL = [];\r\n      let img = [...sub.images];\r\n      // console.log(img);\r\n      \r\n      img.map((one)=>\r\n      {\r\n        let uploadTask =  storage.ref(`/Projects/${title}/${one.name}`).put(one);\r\n      uploadTask.on(\"state_changed\", console.log, console.error, () => {\r\n        storage\r\n          .ref(`Projects/${title}`)\r\n          .child(one.name)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            imgURL.push(url)\r\n            // setimgUrl(newimgURL);\r\n            const uploadTask = storage.ref(`/Projects/${title}/${one.name}`).put(one);\r\n            \r\n          });\r\n      });\r\n        // console.log(one);\r\n      }\r\n      )\r\n\r\n      sections = [...sections,{subheading: sub.subheading, description: sub.subheadingdetails, images: imgURL}];\r\n      // imgURL = \r\n      // console.log(imgUrl,\"OYEPYE\");\r\n    }\r\n    )\r\n    console.log(bannerImagesURL,sections,\"oye2\");\r\n      // let uploadTask = storage.ref(`/Projects/${file.name}`).put(file);\r\n      // uploadTask.on(\"state_changed\", console.log, console.error, () => {\r\n      //   storage\r\n      //     .ref(\"Projects\")\r\n      //     .child(file.name)\r\n      //     .getDownloadURL()\r\n      //     .then((url) => {\r\n      //       setFile(null);\r\n      //       setURL(url);\r\n      //       const uploadTask = storage.ref(`/Projects/${file.name}`).put(file);\r\n      const payload = {\r\n        title: title,\r\n        description: description,\r\n        authors: author,\r\n        publicationUrl: url,\r\n        category: category,\r\n        githubUrl: github,\r\n        year: year,\r\n        images: bannerImagesURL,\r\n        sections: sections,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      }\r\n      console.log(payload);\r\n      // axios.post(`${process.env.REACT_APP_BASE_URL}/project/add/`, payload).then(res=>{window.alert(\"New Project Added\")})\r\n      //       // db.collection(\"Projects\").doc().set({\r\n      //       //   Title: title,\r\n      //       //   Description: description,\r\n      //       //   Authors: author,\r\n      //       //   PublicationURL: url,\r\n      //       //   Category: category,\r\n      //       //   GithubLink: github,\r\n      //       //   Year: year,\r\n      //       //   timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      //       // });\r\n      //       setTitle(\"\");\r\n      //       setDescription(\"\");\r\n      //       setAuthor(\"\");\r\n      //       setYear(\"\");\r\n      //       setFile(null);\r\n\t\t\t// setGithub(\"\");\r\n\t\t\t// setURL(\"\");\r\n      //     });\r\n      // });\r\n         \r\n      \r\n\t}\r\n  };\r\nlet handleChangeinForm = (i, e) => {\r\n    // console.log(formValues);\r\n    let newFormValues = [...formValues];\r\n    newFormValues[i][e.target.name] = e.target.value;\r\n    // newFormValues[i][images] = images2\r\n    setFormValues(newFormValues);\r\n  }\r\nlet handleSubImageChange = (i, e) => {\r\n    // console.log(e.target.files);\r\n    let newFormValues = [...formValues];\r\n    newFormValues[i][e.target.name] = e.target.files;\r\n    // newFormValues[i][images] = images2\r\n    setFormValues(newFormValues);\r\n  }\r\nlet handleImageChange = (e) => {\r\n  setImages(e.target.files);\r\n  \r\n}\r\nlet addFormFields = () => {\r\n  // console.log(sections);\r\n    setFormValues([...formValues, { subheading: \"\", subheadingdetails: \"\" , images: {}}])\r\n  }\r\n\r\nlet removeFormFields = (i) => {\r\n    let newFormValues = [...formValues];\r\n    newFormValues.splice(i, 1);\r\n    setFormValues(newFormValues)\r\n}\r\n  //Deleting Member\r\n\r\n  const crop = {\r\n    unit: '%',\r\n    aspect: 4 / 3,\r\n    width: '100'\r\n  };\r\n  const deleteMember = (id) => {\r\n    db.collection(\"Projects\").doc(id).delete();\r\n  };\r\n\r\n  //UPLOADING FILE STARTED\r\n  const [file, setFile] = useState(null);\r\n  const [url, setURL] = useState(\"\");\r\n  // function handleImageChange(e) {\r\n  //   setFile(e.target.files[0]);\r\n  // }\r\n  const handleUpload = async (e) => {\r\n    const uploadTask = await storage.ref(`/Projects/${file.name}`).put(file);\r\n    uploadTask.on(\"state_changed\", console.log, console.error, () => {\r\n      storage\r\n        .ref(\"Projects\")\r\n        .child(file.name)\r\n        .getDownloadURL()\r\n        .then((url) => {\r\n          setFile(null);\r\n          setURL(url);\r\n        });\r\n    });\r\n  };\r\n  //UPLOADING FILE ENDING\r\n  //DROP DOWN MENU STARTED\r\n  const useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      display: \"block\",\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  const [category, setcategory] = React.useState(\"B.Tech-\");\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    setcategory(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const validate = (text) => {\r\n    console.log(text);\r\n    let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    if (reg.test(text) === false) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  //DROP DOWN MENU ENDS\r\n  return (\r\n    <div className=\"projectCMSwrapper\">\r\n      <div className=\"addMember\">\r\n        <div className=\"title\">Add Projects</div>\r\n        <form action=\"\">\r\n          <div >\r\n            <input\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              placeholder=\"Title *\"\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              placeholder=\"Description *\"\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={author}\r\n              onChange={(e) => setAuthor(e.target.value)}\r\n              placeholder=\"Project Member(s)\"\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={year}\r\n              onChange={(e) => setYear(e.target.value)}\r\n              placeholder=\"Year\"\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={github}\r\n              onChange={(e) => setGithub(e.target.value)}\r\n              placeholder=\"Github Link\"\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n\r\n          <div>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-controlled-open-select-label\">\r\n                category *\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-controlled-open-select-label\"\r\n                id=\"demo-controlled-open-select\"\r\n                open={open}\r\n                onClose={handleClose}\r\n                onOpen={handleOpen}\r\n                value={category}\r\n                onChange={handleChange}\r\n              >\r\n                <MenuItem value={\"Ontology Modelling and Enrichment\"}>\r\n                  Ontology Modelling and Enrichment\r\n                </MenuItem>\r\n                <MenuItem value={\"Description Logic Reasoning\"}>\r\n                  Description Logic Reasoning\r\n                </MenuItem>\r\n                <MenuItem value={\"Knowledge Graphs\"}>Knowledge Graphs</MenuItem>\r\n                <MenuItem value={\"SPARQL Querying\"}>SPARQL Querying</MenuItem>\r\n                <MenuItem value={\"Semantic Web Applications\"}>\r\n                  Semantic Web Applications\r\n                </MenuItem>\r\n                <MenuItem value={\"Others\"}>Others</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n\r\n          {/* <div>\r\n            <input\r\n              type=\"file\"\r\n              placeholder=\"Image\"\r\n              onChange={handleImageChange}\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div> */}\r\n          \r\n          \r\n          <label>Main Images</label>\r\n          <div>\r\n          <input type=\"file\" name=\"images\" id=\"file\" multiple onChange={e => handleImageChange(e)}/>\r\n          </div>\r\n          {/* <MultiImageInput allowCrop={false}\r\n            images={images}\r\n            setImages={setImages}\r\n          /> */}\r\n          \r\n         \r\n\r\n          {formValues.map((element, index) => (\r\n            // <div className=\"subheading\">\r\n            \r\n            <div className=\"form-inline\" key={index}>\r\n              <input type=\"text\" name=\"subheading\" placeholder=\"Subheading\" value={element.subheading || \"\"} onChange={e => handleChangeinForm(index, e)} />\r\n              <input type=\"text\" name=\"subheadingdetails\" placeholder=\"Details\" value={element.subheadingdetails || \"\"} onChange={e => handleChangeinForm(index, e)} />\r\n              <label>Sub Images</label>\r\n              <input type=\"file\" name=\"images\" id=\"file\" multiple onChange={e => handleSubImageChange(index, e)}/>\r\n              {/* <MultiImageInput allowCrop={false}\r\n                images={element.images}\r\n                setImages={setImages2}\r\n\r\n              /> */}\r\n              \r\n              {\r\n                index ? \r\n                  <button type=\"button\"  className=\"button remove\" onClick={() => removeFormFields(index)}>Remove</button> \r\n                : null\r\n              }\r\n            </div>\r\n            // </div>\r\n          ))}\r\n          \r\n          <div className=\"button-section\">\r\n              <button className=\"button add\" type=\"button\" onClick={() => addFormFields()}>Add subheading</button>\r\n          </div>\r\n          <div className=\"button-section\">\r\n            <button className=\"button project\" type=\"button\" onClick={addTeamMember}>Add</button>\r\n          </div>\r\n          \r\n        </form>\r\n      </div>\r\n      {allpublications?.map(({ id, publication }) => (\r\n        <div className=\"Publication\">\r\n          <div className=\"Document\">\r\n            <a target=\"_blank\" href={publication.publicationUrl}>\r\n              <Description />\r\n            </a>\r\n          </div>\r\n          <div className=\"data\" s>\r\n            <div className=\"title\">\r\n              {publication.title}\r\n            </div>\r\n            <div className=\"delete\">\r\n              <button\r\n                onClick={() => {\r\n                  if (window.confirm(`Delete ${publication.title}?`)) {\r\n                    deleteMember(id);\r\n                  }\r\n                }}\r\n              >\r\n                <DeleteForever />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectCMS;\r\n","A:\\Semester 6\\kracr-website\\src\\Components\\CMS\\PublicationCMS\\PublicationCMS.jsx",["238","239","240","241","242","243"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./PublicationCMS.scss\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { storage } from \"../../../firebase\";\r\nimport db from \"../../../firebase\";\r\nimport firebase from \"firebase\";\r\nimport { DeleteForever, Description } from \"@material-ui/icons\";\r\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nfunction PublicationCMS() {\r\n  //Getting Team Members\r\n  const [allpublications, setAllPublications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    db.collection(\"Publications\")\r\n      .orderBy(\"Year\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        setAllPublications(\r\n          snapshot.docs.map((doc) => ({ id: doc.id, publication: doc.data() }))\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  //Adding Team Members\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [author, setAuthor] = useState(\"\");\r\n  const [year, setYear] = useState(\"\");\r\n\r\n  const addTeamMember = async (e) => {\r\n    e.preventDefault();\r\n    if (title === \"\" || description === \"\" || author === \"\") {\r\n      window.alert(\"Please fill Title, Description and Author\");\r\n    } else {\r\n\t\t  e.preventDefault();\r\n\t\tif (\r\n\t    file === null\r\n\t\t)\r\n\t\t{\t\r\n\t\t\r\n\t\t\t\r\n \r\n            db.collection(\"Publications\").doc().set({\r\n              Title: title,\r\n              Description: description,\r\n              Authors: author,\r\n              PublicationURL: url,\r\n              Category: category,\r\n              Year: year,\r\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            });\r\n            setTitle(\"\");\r\n            setDescription(\"\");\r\n            setAuthor(\"\");\r\n            setFile(null);\r\n            setYear(\"\");\r\n\t\t\tsetURL(\"\");\r\n            e.target.value = null;\r\n\t\t\r\n      \r\n  }\r\n  else {\r\n\r\n      let uploadTask = storage.ref(`/Publications/${file.name}`).put(file);\r\n      uploadTask.on(\"state_changed\", console.log, console.error, () => {\r\n        storage\r\n          .ref(\"Publications\")\r\n          .child(file.name)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            setFile(null);\r\n            setURL(url);\r\n            const uploadTask = storage\r\n              .ref(`/Publications/${file.name}`)\r\n              .put(file);\r\n            db.collection(\"Publications\").doc().set({\r\n              Title: title,\r\n              Description: description,\r\n              Authors: author,\r\n              PublicationURL: url,\r\n              Category: category,\r\n              Year: year,\r\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            });\r\n            setTitle(\"\");\r\n            setDescription(\"\");\r\n            setAuthor(\"\");\r\n            setFile(null);\r\n            setYear(\"\");\r\n\t\t\tsetURL(\"\");\r\n            e.target.value = null;\r\n          });\r\n      });\r\n\r\n\t  \r\n  }\r\n  }\r\n  };\r\n\r\n  //Deleting Member\r\n\r\n  const deleteMember = (id) => {\r\n    db.collection(\"Publications\").doc(id).delete();\r\n  };\r\n\r\n  //UPLOADING FILE STARTED\r\n  const [file, setFile] = useState(null);\r\n  const [url, setURL] = useState(\"\");\r\n  function handleImageChange(e) {\r\n    setFile(e.target.files[0]);\r\n  }\r\n  const handleUpload = async (e) => {\r\n    const uploadTask = await storage\r\n      .ref(`/Publications/${file.name}`)\r\n      .put(file);\r\n    uploadTask.on(\"state_changed\", console.log, console.error, () => {\r\n      storage\r\n        .ref(\"Publications\")\r\n        .child(file.name)\r\n        .getDownloadURL()\r\n        .then((url) => {\r\n          setFile(null);\r\n          setURL(url);\r\n        });\r\n    });\r\n  };\r\n  //UPLOADING FILE ENDING\r\n  //DROP DOWN MENU STARTED\r\n  const useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      display: \"block\",\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  const [category, setcategory] = React.useState(\"B.Tech\");\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    setcategory(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const validate = (text) => {\r\n    console.log(text);\r\n    let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    if (reg.test(text) === false) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  //DROP DOWN MENU ENDS\r\n  return (\r\n    <div className=\"publicationCMSwrapper\">\r\n      <div className=\"addMember\">\r\n        <div className=\"title\">Add Publication</div>\r\n        <form action=\"\">\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              placeholder=\"Title *\"\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              placeholder=\"Description *\"\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={author}\r\n              onChange={(e) => setAuthor(e.target.value)}\r\n              placeholder=\"Author *\"\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={year}\r\n              onChange={(e) => setYear(e.target.value)}\r\n              placeholder=\"Year\"\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n          <div>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel id=\"demo-controlled-open-select-label\">\r\n                category\r\n              </InputLabel>\r\n              <Select\r\n                labelId=\"demo-controlled-open-select-label\"\r\n                id=\"demo-controlled-open-select\"\r\n                open={open}\r\n                onClose={handleClose}\r\n                onOpen={handleOpen}\r\n                value={category}\r\n                onChange={handleChange}\r\n              >\r\n                <MenuItem value={\"TypeA\"}>TypeA</MenuItem>\r\n                <MenuItem value={\"TypeB\"}>TypeB</MenuItem>\r\n                <MenuItem value={\"TypeC\"}>TypeC</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"file\"\r\n              placeholder=\"Image\"\r\n              onChange={handleImageChange}\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n\r\n          <div>\r\n            <button onClick={addTeamMember}>Add</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {allpublications?.map(({ id, publication }) => (\r\n        <div className=\"Publication\">\r\n          <div className=\"Document\">\r\n            <a target=\"_blank\" href={publication.PublicationURL}>\r\n              <Description />\r\n            </a>\r\n          </div>\r\n          <div className=\"data\">\r\n            <div className=\"title\">\r\n              {publication.Title}, {publication.Authors}\r\n            </div>\r\n            <div className=\"delete\">\r\n              <button\r\n                onClick={() => {\r\n                  if (window.confirm(`Delete ${publication.Title}?`)) {\r\n                    deleteMember(id);\r\n                  }\r\n                }}\r\n              >\r\n                <DeleteForever />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PublicationCMS;\r\n","A:\\Semester 6\\kracr-website\\src\\Components\\CMS\\NewsCMS\\NewsCMS.jsx",["244","245","246","247","248","249","250","251","252"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./NewsCMS.scss\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { storage } from \"../../../firebase\";\r\nimport db from \"../../../firebase\";\r\nimport firebase from \"firebase\";\r\nimport { DeleteForever, Description } from \"@material-ui/icons\";\r\nimport axios from 'axios';\r\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nfunction NewsCMS() {\r\n  //Getting Team Members\r\n  const [allnews, setAllNews] = useState([]);\r\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n];\r\n\r\n  useEffect(() => {\r\n    axios.get(`${process.env.REACT_APP_BASE_URL}/news`).then((news)=>{\r\n      setAllNews(\r\n        news.data.map((one)=>\r\n        {\r\n          var year = new Date(one.Date).getFullYear();\r\n          var month = monthNames[new Date(one.Date).getMonth()];\r\n                  console.log(one.Title);\r\n            return ({ id: one._id, title: one.Title, date: `${month} ${year}` })\r\n        }\r\n          \r\n        )\r\n      );\r\n    })\r\n    // db.collection(\"News\")\r\n    //   .orderBy(\"Date\", \"desc\")\r\n    //   .onSnapshot((snapshot) => {\r\n    //     setAllNews(\r\n    //       snapshot.docs.map((doc) => {\r\n    //         var year = new Date(doc.data().Date.seconds * 1000).getFullYear();\r\n    //         var month = monthNames[new Date(doc.data().Date.seconds * 1000).getMonth()];\r\n    //               console.log(doc.data().Title);\r\n    //         return ({ id: doc.id, title: doc.data().Title, date: `${month} ${year}` })\r\n    //         })\r\n    //     );\r\n    //   });\r\n  }, []);\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  const deleteMember = (id) => {\r\n    db.collection(\"News\").doc(id).delete();\r\n  };\r\n\r\n  const addNews = async (e) => {\r\n    e.preventDefault();\r\n    console.log(title);\r\n    console.log(date);\r\n    if (title === \"\" || date === \"\") {\r\n      window.alert(\"Please fill News and Date\");\r\n    } else {\r\n\t\te.preventDefault();\r\n    const payload = {\r\n      Title: title, \r\n      Date: date\r\n    }\r\n    axios.post(`${process.env.REACT_APP_BASE_URL}/news/add/`, payload).then(res=>{window.alert(\"News Added\")})\r\n    // db.collection(\"News\").doc().set({\r\n    //   Title: title,\r\n    //   Date: firebase.firestore.Timestamp.fromDate(new Date(date)),\r\n    // });\r\n    setTitle(\"\");\r\n    setDate(\"\");\r\n\t}\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"publicationCMSwrapper\">\r\n      <div className=\"addMember\">\r\n        <div className=\"title\">Add News</div>\r\n        <form action=\"\">\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              placeholder=\"News *\"\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"date\"\r\n              value={date}\r\n              onChange={(e) => setDate(e.target.value)}\r\n              placeholder=\"Date\"\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n          <div>\r\n            <button onClick={addNews}>Add</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {allnews?.map(({ id, title, date }) => (\r\n        <div className=\"Publication\">\r\n          <div className=\"data\">\r\n          <div className=\"title\">\r\n              {date}\r\n            </div>\r\n            <div className=\"body\">\r\n              {title}\r\n            </div>\r\n            <div className=\"delete\">\r\n              <button\r\n                onClick={() => {\r\n                  if (window.confirm(`Delete ${title}?`)) {\r\n                    deleteMember(id);\r\n                  }\r\n                }}\r\n              >\r\n                <DeleteForever />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewsCMS;\r\n","A:\\Semester 6\\kracr-website\\src\\Components\\CMS\\TeamCMS\\TeamCMSMember.jsx",["253","254","255","256","257"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./TeamCMSMember.scss\";\r\nimport { DeleteForever } from \"@material-ui/icons\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport db from \"../../../firebase\";\r\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\nimport firebase from \"firebase\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nfunction TeamCMSMember({ member, id }) {\r\n  const deleteMember = () => {\r\n    db.collection(\"TeamMembers\").doc(id).delete();\r\n  };\r\n\r\n  const [category, setcategory] = useState(\"B.Tech\");\r\n\r\n  useEffect(() => {\r\n    setcategory(member.Position);\r\n  }, []);\r\n\r\n  //DROP DOWN MENU STARTED\r\n  const useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      display: \"block\",\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    setcategory(event.target.value);\r\n    db.collection(\"TeamMembers\")\r\n      .doc(id)\r\n      .update({ Position: event.target.value });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const validate = (text) => {\r\n    console.log(text);\r\n    let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    if (reg.test(text) === false) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  //DROP DOWN MENU ENDS\r\n  return (\r\n    <div className=\"member\">\r\n      <div className=\"image\">\r\n        <img src={member.ImageURL} alt={member.Name}></img>\r\n      </div>\r\n      <div className=\"data\">\r\n        <div className=\"title\">\r\n          {member.Name},{\" \"}\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-controlled-open-select-label\">\r\n              category\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-controlled-open-select-label\"\r\n              id=\"demo-controlled-open-select\"\r\n              open={open}\r\n              onClose={handleClose}\r\n              onOpen={handleOpen}\r\n              value={category}\r\n              onChange={handleChange}\r\n            >\r\n              <MenuItem value={\"Faculty\"}>Faculty</MenuItem>\r\n              <MenuItem value={\"PhD\"}>Ph.D</MenuItem>\r\n              <MenuItem value={\"Masters\"}>Masters</MenuItem>\r\n              <MenuItem value={\"BTech\"}>B.Tech</MenuItem>\r\n              <MenuItem value={\"Alumni\"}>Alumni</MenuItem>\r\n              <MenuItem value={\"RA\"}>RA</MenuItem>\r\n              <MenuItem value={\"Intern\"}>Intern</MenuItem>\r\n              <MenuItem value={\"Collaborator\"}>Collaborator</MenuItem>\r\n            </Select>\r\n          </FormControl>{\" \"}\r\n        </div>\r\n        <div className=\"delete\">\r\n          <IconButton\r\n            onClick={() => {\r\n              if (window.confirm(`Delete ${member.Name}?`)) {\r\n                deleteMember();\r\n              }\r\n            }}\r\n          >\r\n            <DeleteForever />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TeamCMSMember;\r\n","A:\\Semester 6\\kracr-website\\src\\Components\\JoinUs\\JoinUs.jsx",["258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284"],"import db from \"../../firebase\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { ExpandMore, ExpandLess, NavigateBefore, NavigateNext, DoubleArrow, Flag, CenterFocusWeak } from \"@material-ui/icons\";\r\nimport { Card, CardActions, CardContent, Typography, Grid, Paper, TextField, Button, TableCell, TableRow, TableBody, TableHead,Modal, Box, Table, TablePagination } from '@material-ui/core';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { ScrollMenu, VisibilityContext } from \"react-horizontal-scrolling-menu\";\r\nimport axios from 'axios';\r\nimport \"./JoinUs.scss\";\r\nfunction JoinUs() {\r\n    const [allopenings, setAllOpenings] = useState([]);\r\n    const [allNews, setAllNews] = useState([]);\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [inputFilter, SetInputFilter] = useState(\"\");\r\n    const [nestedNews, setNestedNews] = useState({});\r\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n  ];\r\n  \r\n  useEffect(() => {\r\n    axios.get(`${process.env.REACT_APP_BASE_URL}/joinus`).then((opening)=>{\r\n        setAllOpenings(\r\n          opening.data.map((one)=>\r\n          {\r\n            // var year = new Date(one.Date).getFullYear();\r\n            // var month = monthNames[new Date(one.Date).getMonth()];\r\n                    // console.log(one,\"hello\");\r\n              return ({ id: one._id, opening: one })\r\n          }\r\n            \r\n          )\r\n        );\r\n      });\r\n    }, []);\r\n\r\n  useEffect(() => {\r\n      const tempList = allNews.filter(({ id, news }) => {\r\n        return (\r\n          news.Title.toLowerCase().indexOf(inputFilter.toLowerCase()) !==\r\n            -1 ||\r\n          (monthNames[new Date(news.Date).getMonth()] + \" \" + new Date(news.Date).getFullYear()).toLowerCase().indexOf(inputFilter.toLowerCase()) !==\r\n            -1\r\n        );\r\n      });\r\n      setFilteredData(tempList);\r\n    }, [inputFilter, allNews]);\r\n\r\n  useEffect(() => {\r\n    var recentNews = filteredData.sort((a, b) => a.Date < b.Date).slice(0, 5).map(({id, news}) => id);\r\n\r\n    var tempNestedNews = {}\r\n    filteredData?.forEach(({id, news}) => {\r\n      var year = new Date(news.Date).getFullYear();\r\n      var month = new Date(news.Date).getMonth();\r\n      if(!tempNestedNews[year]) {\r\n        tempNestedNews[year] = {\r\n          title: year,\r\n          collapsed: true,\r\n          children: {}\r\n        };\r\n      } \r\n      if(!tempNestedNews[year].children[month]) {\r\n        tempNestedNews[year].children[month] = {\r\n          title: monthNames[month],\r\n          collapsed: true,\r\n          children: {}\r\n        };\r\n      }\r\n      tempNestedNews[year].children[month].children[id] = news;\r\n      if(recentNews.find(el => el == id)) {\r\n        tempNestedNews[year].collapsed = nestedNews[year] ? nestedNews[year].collapsed : false;\r\n        tempNestedNews[year].children[month].collapsed = nestedNews[year] && nestedNews[year].children[month] ? nestedNews[year].children[month].collapsed : false;\r\n      }\r\n    });\r\n    setNestedNews(tempNestedNews);\r\n  }, [filteredData])\r\n    \r\n    function LeftArrow() {\r\n      const { isFirstItemVisible, scrollPrev } = React.useContext(VisibilityContext)\r\n    \r\n      return (\r\n        <div className=\"arrow left\" onClick={() => scrollPrev()} >\r\n          <NavigateBefore disabled={isFirstItemVisible} />\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    function RightArrow() {\r\n      const { isLastItemVisible, scrollNext } = React.useContext(VisibilityContext)\r\n    \r\n      return (\r\n        <div className=\"arrow right\"  onClick={() => scrollNext()}>\r\n          <NavigateNext disabled={isLastItemVisible}/>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <div className=\"heading\">Job Opening</div>\r\n        {allopenings?.map(({ id, opening }) => (\r\n        \r\n        <Card style={{\r\n        maxWidth: \"95%\",\r\n        boxShadow: \"0 5px 8px 0 rgba(0, 0, 0, 0.3)\",\r\n        backgroundColor: \"#fafafa\",\r\n        marginBottom: \"10px\"\r\n      }}>\r\n      <CardContent>\r\n        <Typography className=\"title\" color=\"blue\" variant=\"h5\" >\r\n          {opening.role}\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          {opening.description}\r\n        </Typography>\r\n        <Typography className=\"pos\" color=\"textSecondary\">\r\n          Due Date: {new Date(opening.dueDate).toDateString()}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions style={{\r\n          display: \"flex\",\r\n          justifyContent: \"flex-end\"\r\n      }}>\r\n      <Button style={{\r\n            padding: \"10px 20px\",\r\n            backgroundColor: \"dodgerblue\",\r\n            // background-color: dodgerblue,\r\n            border: \"1px solid #ddd\",\r\n            color: \"white\",\r\n            alignContent: \"left\",\r\n            // cursor: pointer\r\n        }} size=\"small\" onClick={()=> window.open(opening.jdPdf, \"_blank\")}>View JD</Button>\r\n        <Button style={{\r\n            padding: \"10px 20px\",\r\n            backgroundColor: \"dodgerblue\",\r\n            // background-color: dodgerblue,\r\n            border: \"1px solid #ddd\",\r\n            color: \"white\",\r\n            // cursor: pointer\r\n        }} size=\"small\" onClick={()=> window.open(opening.applyLink, \"_blank\")}>Apply</Button>\r\n\r\n      </CardActions>\r\n    </Card>\r\n        ))}\r\n        </div>\r\n      \r\n)\r\n}\r\n\r\nexport default JoinUs;\r\n","A:\\Semester 6\\kracr-website\\src\\Components\\CMS\\JoinUsCMS\\JoinUsCMS.jsx",["285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./JoinUsCMS.scss\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { storage } from \"../../../firebase\";\r\nimport db from \"../../../firebase\";\r\nimport firebase from \"firebase\";\r\nimport { DeleteForever, Description } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nfunction JoinUsCMS() {\r\n  //Getting Team Members\r\n  const [alljobs, setAllJobs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`${process.env.REACT_APP_BASE_URL}/joinus`).then((jobs)=>{\r\n      setAllJobs(\r\n        jobs.data.map((one)=>\r\n        {\r\n          var due = new Date(one.dueDate).toDateString();\r\n            return ({ id: one._id, job: one })\r\n        }\r\n          \r\n        )\r\n      );\r\n    })\r\n  }, []);\r\n\r\n  //Adding Team Members\r\n  const [jobrole, setJobRole] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [dueDate, setDueDate] = useState(\"\");\r\n  const [formLink, setformLink] = useState(\"\");\r\n\r\n//   const addTeamMember = async (e) => {\r\n//     e.preventDefault();\r\n//     if (title === \"\" || description === \"\" || author === \"\") {\r\n//       window.alert(\"Please fill Title, Description and Author\");\r\n//     } else {\r\n// \t\t  e.preventDefault();\r\n// \t\tif (\r\n// \t    file === null\r\n// \t\t)\r\n// \t\t{\t\r\n\t\t\r\n\t\t\t\r\n \r\n//             db.collection(\"Publications\").doc().set({\r\n//               Title: title,\r\n//               Description: description,\r\n//               Authors: author,\r\n//               PublicationURL: url,\r\n//               Category: category,\r\n//               Year: year,\r\n//               timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n//             });\r\n//             setTitle(\"\");\r\n//             setDescription(\"\");\r\n//             setAuthor(\"\");\r\n//             setFile(null);\r\n//             setYear(\"\");\r\n// \t\t\tsetURL(\"\");\r\n//             e.target.value = null;\r\n\t\t\r\n      \r\n//   }\r\n//   else {\r\n\r\n//       let uploadTask = storage.ref(`/Publications/${file.name}`).put(file);\r\n//       uploadTask.on(\"state_changed\", console.log, console.error, () => {\r\n//         storage\r\n//           .ref(\"Publications\")\r\n//           .child(file.name)\r\n//           .getDownloadURL()\r\n//           .then((url) => {\r\n//             setFile(null);\r\n//             setURL(url);\r\n//             const uploadTask = storage\r\n//               .ref(`/Publications/${file.name}`)\r\n//               .put(file);\r\n//             db.collection(\"Publications\").doc().set({\r\n//               Title: title,\r\n//               Description: description,\r\n//               Authors: author,\r\n//               PublicationURL: url,\r\n//               Category: category,\r\n//               Year: year,\r\n//               timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n//             });\r\n//             setTitle(\"\");\r\n//             setDescription(\"\");\r\n//             setAuthor(\"\");\r\n//             setFile(null);\r\n//             setYear(\"\");\r\n// \t\t\tsetURL(\"\");\r\n//             e.target.value = null;\r\n//           });\r\n//       });\r\n\r\n\t  \r\n//   }\r\n//   }\r\n//   };\r\n\r\n  //Deleting Member\r\n\r\n  const deleteMember = (id) => {\r\n    db.collection(\"Publications\").doc(id).delete();\r\n  };\r\n\r\n  //UPLOADING FILE STARTED\r\n  const [file, setFile] = useState(null);\r\n  const [url, setURL] = useState(\"\");\r\n  let handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  }\r\n  const handleUpload = async (e) => {\r\n    const uploadTask = await storage\r\n      .ref(`/Publications/${file.name}`)\r\n      .put(file);\r\n    uploadTask.on(\"state_changed\", console.log, console.error, () => {\r\n      storage\r\n        .ref(\"Publications\")\r\n        .child(file.name)\r\n        .getDownloadURL()\r\n        .then((url) => {\r\n          setFile(null);\r\n          setURL(url);\r\n        });\r\n    });\r\n  };\r\n  //UPLOADING FILE ENDING\r\n  //DROP DOWN MENU STARTED\r\n  const useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      display: \"block\",\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n  const [category, setcategory] = React.useState(\"B.Tech\");\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    setcategory(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const validate = (text) => {\r\n    console.log(text);\r\n    let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    if (reg.test(text) === false) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  //DROP DOWN MENU ENDS\r\n  return (\r\n    <div className=\"publicationCMSwrapper\">\r\n      <div className=\"addMember\">\r\n        <div className=\"title\">Add New Opening</div>\r\n        <form action=\"\">\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={jobrole}\r\n              onChange={(e) => setJobRole(e.target.value)}\r\n              placeholder=\"Job Role *\"\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              placeholder=\"Description *\"\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={formLink}\r\n              onChange={(e) => setformLink(e.target.value)}\r\n              placeholder=\"Apply Link \"\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n          <div>\r\n              <label>Due Date</label>\r\n            <input\r\n              type=\"date\"\r\n              value={dueDate}\r\n              onChange={(e) => setDueDate(e.target.value)}\r\n              placeholder=\"Due Date\"\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n          <div>\r\n\r\n            <input\r\n              type=\"file\"\r\n              placeholder=\"Image\"\r\n              onChange={handleFileChange}\r\n            ></input>\r\n            <span className=\"border\"></span>\r\n          </div>\r\n\r\n          <div>\r\n            <button >Add</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {alljobs?.map(({ id, job }) => (\r\n        <div className=\"Publication\">\r\n          <div className=\"Document\">\r\n            <a target=\"_blank\" >\r\n              <Description />\r\n            </a>\r\n          </div>\r\n          <div className=\"data\">\r\n            <div className=\"title\">\r\n              {job.role}, {job.description}, Due Date: {new Date(job.dueDate).toDateString()}\r\n            </div>\r\n            <div className=\"delete\">\r\n              <button\r\n                onClick={() => {\r\n                  if (window.confirm(`Delete ${job.description}?`)) {\r\n                    deleteMember(id);\r\n                  }\r\n                }}\r\n              >\r\n                <DeleteForever />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JoinUsCMS;\r\n",{"ruleId":"303","replacedBy":"304"},{"ruleId":"305","replacedBy":"306"},{"ruleId":"307","severity":1,"message":"308","line":4,"column":10,"nodeType":"309","messageId":"310","endLine":4,"endColumn":14},{"ruleId":"307","severity":1,"message":"311","line":7,"column":8,"nodeType":"309","messageId":"310","endLine":7,"endColumn":25},{"ruleId":"307","severity":1,"message":"312","line":8,"column":17,"nodeType":"309","messageId":"310","endLine":8,"endColumn":21},{"ruleId":"307","severity":1,"message":"313","line":11,"column":10,"nodeType":"309","messageId":"310","endLine":11,"endColumn":20},{"ruleId":"307","severity":1,"message":"314","line":16,"column":9,"nodeType":"309","messageId":"310","endLine":16,"endColumn":15},{"ruleId":"315","severity":1,"message":"316","line":80,"column":22,"nodeType":"317","messageId":"318","endLine":80,"endColumn":23,"suggestions":"319"},{"ruleId":"315","severity":1,"message":"316","line":80,"column":38,"nodeType":"317","messageId":"318","endLine":80,"endColumn":39,"suggestions":"320"},{"ruleId":"307","severity":1,"message":"321","line":88,"column":12,"nodeType":"309","messageId":"310","endLine":88,"endColumn":21},{"ruleId":"307","severity":1,"message":"322","line":98,"column":12,"nodeType":"309","messageId":"310","endLine":98,"endColumn":22},{"ruleId":"307","severity":1,"message":"323","line":3,"column":8,"nodeType":"309","messageId":"310","endLine":3,"endColumn":10},{"ruleId":"307","severity":1,"message":"324","line":7,"column":8,"nodeType":"309","messageId":"310","endLine":7,"endColumn":22},{"ruleId":"325","severity":1,"message":"326","line":73,"column":33,"nodeType":"327","messageId":"328","endLine":73,"endColumn":35},{"ruleId":"307","severity":1,"message":"329","line":4,"column":3,"nodeType":"309","messageId":"310","endLine":4,"endColumn":20},{"ruleId":"307","severity":1,"message":"330","line":5,"column":3,"nodeType":"309","messageId":"310","endLine":5,"endColumn":17},{"ruleId":"307","severity":1,"message":"323","line":14,"column":8,"nodeType":"309","messageId":"310","endLine":14,"endColumn":10},{"ruleId":"331","severity":1,"message":"332","line":38,"column":33,"nodeType":"333","messageId":"334","endLine":38,"endColumn":35},{"ruleId":"325","severity":1,"message":"326","line":39,"column":28,"nodeType":"327","messageId":"328","endLine":39,"endColumn":30},{"ruleId":"325","severity":1,"message":"326","line":41,"column":35,"nodeType":"327","messageId":"328","endLine":41,"endColumn":37},{"ruleId":"325","severity":1,"message":"326","line":43,"column":35,"nodeType":"327","messageId":"328","endLine":43,"endColumn":37},{"ruleId":"325","severity":1,"message":"326","line":45,"column":35,"nodeType":"327","messageId":"328","endLine":45,"endColumn":37},{"ruleId":"325","severity":1,"message":"326","line":47,"column":35,"nodeType":"327","messageId":"328","endLine":47,"endColumn":37},{"ruleId":"325","severity":1,"message":"326","line":49,"column":35,"nodeType":"327","messageId":"328","endLine":49,"endColumn":37},{"ruleId":"325","severity":1,"message":"326","line":51,"column":35,"nodeType":"327","messageId":"328","endLine":51,"endColumn":37},{"ruleId":"325","severity":1,"message":"326","line":53,"column":29,"nodeType":"327","messageId":"328","endLine":53,"endColumn":31},{"ruleId":"307","severity":1,"message":"335","line":14,"column":3,"nodeType":"309","messageId":"310","endLine":14,"endColumn":8},{"ruleId":"307","severity":1,"message":"336","line":17,"column":7,"nodeType":"309","messageId":"310","endLine":17,"endColumn":15},{"ruleId":"337","severity":1,"message":"338","line":41,"column":6,"nodeType":"339","endLine":41,"endColumn":8,"suggestions":"340"},{"ruleId":"325","severity":1,"message":"326","line":98,"column":67,"nodeType":"327","messageId":"328","endLine":98,"endColumn":69},{"ruleId":"325","severity":1,"message":"326","line":103,"column":36,"nodeType":"327","messageId":"328","endLine":103,"endColumn":38},{"ruleId":"307","severity":1,"message":"341","line":4,"column":10,"nodeType":"309","messageId":"310","endLine":4,"endColumn":14},{"ruleId":"307","severity":1,"message":"323","line":1,"column":8,"nodeType":"309","messageId":"310","endLine":1,"endColumn":10},{"ruleId":"307","severity":1,"message":"342","line":3,"column":64,"nodeType":"309","messageId":"310","endLine":3,"endColumn":75},{"ruleId":"307","severity":1,"message":"313","line":5,"column":10,"nodeType":"309","messageId":"310","endLine":5,"endColumn":20},{"ruleId":"337","severity":1,"message":"343","line":47,"column":8,"nodeType":"339","endLine":47,"endColumn":30,"suggestions":"344"},{"ruleId":"325","severity":1,"message":"326","line":71,"column":35,"nodeType":"327","messageId":"328","endLine":71,"endColumn":37},{"ruleId":"337","severity":1,"message":"345","line":77,"column":6,"nodeType":"339","endLine":77,"endColumn":20,"suggestions":"346"},{"ruleId":"307","severity":1,"message":"321","line":79,"column":14,"nodeType":"309","messageId":"310","endLine":79,"endColumn":23},{"ruleId":"307","severity":1,"message":"322","line":89,"column":14,"nodeType":"309","messageId":"310","endLine":89,"endColumn":24},{"ruleId":"347","severity":1,"message":"348","line":128,"column":39,"nodeType":"349","endLine":128,"endColumn":82},{"ruleId":"347","severity":1,"message":"348","line":141,"column":45,"nodeType":"349","endLine":141,"endColumn":104},{"ruleId":"307","severity":1,"message":"350","line":7,"column":9,"nodeType":"309","messageId":"310","endLine":7,"endColumn":23},{"ruleId":"325","severity":1,"message":"326","line":47,"column":66,"nodeType":"327","messageId":"328","endLine":47,"endColumn":68},{"ruleId":"325","severity":1,"message":"326","line":160,"column":33,"nodeType":"327","messageId":"328","endLine":160,"endColumn":35},{"ruleId":"325","severity":1,"message":"326","line":180,"column":22,"nodeType":"327","messageId":"328","endLine":180,"endColumn":24},{"ruleId":"325","severity":1,"message":"326","line":218,"column":22,"nodeType":"327","messageId":"328","endLine":218,"endColumn":24},{"ruleId":"325","severity":1,"message":"326","line":247,"column":29,"nodeType":"327","messageId":"328","endLine":247,"endColumn":31},{"ruleId":"307","severity":1,"message":"323","line":5,"column":8,"nodeType":"309","messageId":"310","endLine":5,"endColumn":10},{"ruleId":"331","severity":1,"message":"332","line":40,"column":28,"nodeType":"333","messageId":"334","endLine":40,"endColumn":30},{"ruleId":"325","severity":1,"message":"326","line":41,"column":28,"nodeType":"327","messageId":"328","endLine":41,"endColumn":30},{"ruleId":"325","severity":1,"message":"326","line":43,"column":35,"nodeType":"327","messageId":"328","endLine":43,"endColumn":37},{"ruleId":"325","severity":1,"message":"326","line":45,"column":35,"nodeType":"327","messageId":"328","endLine":45,"endColumn":37},{"ruleId":"325","severity":1,"message":"326","line":47,"column":35,"nodeType":"327","messageId":"328","endLine":47,"endColumn":37},{"ruleId":"325","severity":1,"message":"326","line":49,"column":35,"nodeType":"327","messageId":"328","endLine":49,"endColumn":37},{"ruleId":"325","severity":1,"message":"326","line":51,"column":35,"nodeType":"327","messageId":"328","endLine":51,"endColumn":37},{"ruleId":"325","severity":1,"message":"326","line":96,"column":34,"nodeType":"327","messageId":"328","endLine":96,"endColumn":36},{"ruleId":"351","severity":1,"message":"352","line":106,"column":19,"nodeType":"353","endLine":106,"endColumn":39},{"ruleId":"325","severity":1,"message":"326","line":110,"column":27,"nodeType":"327","messageId":"328","endLine":110,"endColumn":29},{"ruleId":"325","severity":1,"message":"326","line":115,"column":30,"nodeType":"327","messageId":"328","endLine":115,"endColumn":32},{"ruleId":"325","severity":1,"message":"326","line":136,"column":34,"nodeType":"327","messageId":"328","endLine":136,"endColumn":36},{"ruleId":"325","severity":1,"message":"326","line":144,"column":28,"nodeType":"327","messageId":"328","endLine":144,"endColumn":30},{"ruleId":"325","severity":1,"message":"326","line":149,"column":30,"nodeType":"327","messageId":"328","endLine":149,"endColumn":32},{"ruleId":"325","severity":1,"message":"326","line":164,"column":34,"nodeType":"327","messageId":"328","endLine":164,"endColumn":36},{"ruleId":"325","severity":1,"message":"326","line":172,"column":28,"nodeType":"327","messageId":"328","endLine":172,"endColumn":30},{"ruleId":"325","severity":1,"message":"326","line":177,"column":30,"nodeType":"327","messageId":"328","endLine":177,"endColumn":32},{"ruleId":"325","severity":1,"message":"326","line":191,"column":53,"nodeType":"327","messageId":"328","endLine":191,"endColumn":55},{"ruleId":"325","severity":1,"message":"326","line":199,"column":28,"nodeType":"327","messageId":"328","endLine":199,"endColumn":30},{"ruleId":"325","severity":1,"message":"326","line":204,"column":30,"nodeType":"327","messageId":"328","endLine":204,"endColumn":32},{"ruleId":"325","severity":1,"message":"326","line":218,"column":34,"nodeType":"327","messageId":"328","endLine":218,"endColumn":36},{"ruleId":"325","severity":1,"message":"326","line":226,"column":28,"nodeType":"327","messageId":"328","endLine":226,"endColumn":30},{"ruleId":"325","severity":1,"message":"326","line":231,"column":30,"nodeType":"327","messageId":"328","endLine":231,"endColumn":32},{"ruleId":"325","severity":1,"message":"326","line":243,"column":60,"nodeType":"327","messageId":"328","endLine":243,"endColumn":62},{"ruleId":"325","severity":1,"message":"326","line":250,"column":28,"nodeType":"327","messageId":"328","endLine":250,"endColumn":30},{"ruleId":"325","severity":1,"message":"326","line":255,"column":30,"nodeType":"327","messageId":"328","endLine":255,"endColumn":32},{"ruleId":"325","severity":1,"message":"326","line":32,"column":33,"nodeType":"327","messageId":"328","endLine":32,"endColumn":35},{"ruleId":"325","severity":1,"message":"326","line":53,"column":33,"nodeType":"327","messageId":"328","endLine":53,"endColumn":35},{"ruleId":"325","severity":1,"message":"326","line":73,"column":33,"nodeType":"327","messageId":"328","endLine":73,"endColumn":35},{"ruleId":"325","severity":1,"message":"326","line":78,"column":33,"nodeType":"327","messageId":"328","endLine":78,"endColumn":35},{"ruleId":"325","severity":1,"message":"326","line":98,"column":36,"nodeType":"327","messageId":"328","endLine":98,"endColumn":38},{"ruleId":"325","severity":1,"message":"326","line":130,"column":60,"nodeType":"327","messageId":"328","endLine":130,"endColumn":62},{"ruleId":"307","severity":1,"message":"354","line":7,"column":8,"nodeType":"309","messageId":"310","endLine":7,"endColumn":16},{"ruleId":"307","severity":1,"message":"355","line":8,"column":10,"nodeType":"309","messageId":"310","endLine":8,"endColumn":23},{"ruleId":"307","severity":1,"message":"356","line":9,"column":10,"nodeType":"309","messageId":"310","endLine":9,"endColumn":20},{"ruleId":"307","severity":1,"message":"357","line":105,"column":19,"nodeType":"309","messageId":"310","endLine":105,"endColumn":29},{"ruleId":"307","severity":1,"message":"358","line":153,"column":9,"nodeType":"309","messageId":"310","endLine":153,"endColumn":21},{"ruleId":"307","severity":1,"message":"359","line":163,"column":9,"nodeType":"309","messageId":"310","endLine":163,"endColumn":21},{"ruleId":"307","severity":1,"message":"360","line":205,"column":9,"nodeType":"309","messageId":"310","endLine":205,"endColumn":17},{"ruleId":"315","severity":1,"message":"316","line":207,"column":22,"nodeType":"317","messageId":"318","endLine":207,"endColumn":23,"suggestions":"361"},{"ruleId":"315","severity":1,"message":"316","line":207,"column":38,"nodeType":"317","messageId":"318","endLine":207,"endColumn":39,"suggestions":"362"},{"ruleId":"307","severity":1,"message":"363","line":9,"column":8,"nodeType":"309","messageId":"310","endLine":9,"endColumn":23},{"ruleId":"337","severity":1,"message":"364","line":38,"column":6,"nodeType":"339","endLine":38,"endColumn":8,"suggestions":"365"},{"ruleId":"307","severity":1,"message":"366","line":49,"column":10,"nodeType":"309","messageId":"310","endLine":49,"endColumn":16},{"ruleId":"307","severity":1,"message":"367","line":49,"column":17,"nodeType":"309","messageId":"310","endLine":49,"endColumn":26},{"ruleId":"307","severity":1,"message":"368","line":50,"column":10,"nodeType":"309","messageId":"310","endLine":50,"endColumn":17},{"ruleId":"307","severity":1,"message":"369","line":50,"column":19,"nodeType":"309","messageId":"310","endLine":50,"endColumn":29},{"ruleId":"331","severity":1,"message":"332","line":62,"column":28,"nodeType":"333","messageId":"334","endLine":62,"endColumn":30},{"ruleId":"307","severity":1,"message":"357","line":74,"column":19,"nodeType":"309","messageId":"310","endLine":74,"endColumn":29},{"ruleId":"331","severity":1,"message":"332","line":79,"column":26,"nodeType":"333","messageId":"334","endLine":79,"endColumn":28},{"ruleId":"331","severity":1,"message":"332","line":85,"column":20,"nodeType":"333","messageId":"334","endLine":85,"endColumn":22},{"ruleId":"307","severity":1,"message":"357","line":96,"column":19,"nodeType":"309","messageId":"310","endLine":96,"endColumn":29},{"ruleId":"307","severity":1,"message":"370","line":187,"column":9,"nodeType":"309","messageId":"310","endLine":187,"endColumn":13},{"ruleId":"307","severity":1,"message":"359","line":202,"column":9,"nodeType":"309","messageId":"310","endLine":202,"endColumn":21},{"ruleId":"307","severity":1,"message":"360","line":244,"column":9,"nodeType":"309","messageId":"310","endLine":244,"endColumn":17},{"ruleId":"315","severity":1,"message":"316","line":246,"column":22,"nodeType":"317","messageId":"318","endLine":246,"endColumn":23,"suggestions":"371"},{"ruleId":"315","severity":1,"message":"316","line":246,"column":38,"nodeType":"317","messageId":"318","endLine":246,"endColumn":39,"suggestions":"372"},{"ruleId":"373","severity":1,"message":"374","line":393,"column":13,"nodeType":"353","messageId":"375","endLine":393,"endColumn":66,"fix":"376"},{"ruleId":"307","severity":1,"message":"357","line":73,"column":19,"nodeType":"309","messageId":"310","endLine":73,"endColumn":29},{"ruleId":"307","severity":1,"message":"359","line":112,"column":9,"nodeType":"309","messageId":"310","endLine":112,"endColumn":21},{"ruleId":"307","severity":1,"message":"360","line":156,"column":9,"nodeType":"309","messageId":"310","endLine":156,"endColumn":17},{"ruleId":"315","severity":1,"message":"316","line":158,"column":22,"nodeType":"317","messageId":"318","endLine":158,"endColumn":23,"suggestions":"377"},{"ruleId":"315","severity":1,"message":"316","line":158,"column":38,"nodeType":"317","messageId":"318","endLine":158,"endColumn":39,"suggestions":"378"},{"ruleId":"373","severity":1,"message":"374","line":245,"column":13,"nodeType":"353","messageId":"375","endLine":245,"endColumn":66,"fix":"379"},{"ruleId":"307","severity":1,"message":"380","line":3,"column":10,"nodeType":"309","messageId":"310","endLine":3,"endColumn":20},{"ruleId":"307","severity":1,"message":"381","line":4,"column":10,"nodeType":"309","messageId":"310","endLine":4,"endColumn":17},{"ruleId":"307","severity":1,"message":"354","line":6,"column":8,"nodeType":"309","messageId":"310","endLine":6,"endColumn":16},{"ruleId":"307","severity":1,"message":"382","line":7,"column":25,"nodeType":"309","messageId":"310","endLine":7,"endColumn":36},{"ruleId":"307","severity":1,"message":"383","line":9,"column":10,"nodeType":"309","messageId":"310","endLine":9,"endColumn":21},{"ruleId":"307","severity":1,"message":"384","line":9,"column":23,"nodeType":"309","messageId":"310","endLine":9,"endColumn":33},{"ruleId":"307","severity":1,"message":"385","line":9,"column":35,"nodeType":"309","messageId":"310","endLine":9,"endColumn":43},{"ruleId":"307","severity":1,"message":"386","line":9,"column":45,"nodeType":"309","messageId":"310","endLine":9,"endColumn":51},{"ruleId":"337","severity":1,"message":"343","line":44,"column":6,"nodeType":"339","endLine":44,"endColumn":8,"suggestions":"387"},{"ruleId":"307","severity":1,"message":"354","line":7,"column":8,"nodeType":"309","messageId":"310","endLine":7,"endColumn":16},{"ruleId":"337","severity":1,"message":"388","line":19,"column":6,"nodeType":"339","endLine":19,"endColumn":8,"suggestions":"389"},{"ruleId":"307","severity":1,"message":"360","line":51,"column":9,"nodeType":"309","messageId":"310","endLine":51,"endColumn":17},{"ruleId":"315","severity":1,"message":"316","line":53,"column":22,"nodeType":"317","messageId":"318","endLine":53,"endColumn":23,"suggestions":"390"},{"ruleId":"315","severity":1,"message":"316","line":53,"column":38,"nodeType":"317","messageId":"318","endLine":53,"endColumn":39,"suggestions":"391"},{"ruleId":"307","severity":1,"message":"323","line":1,"column":8,"nodeType":"309","messageId":"310","endLine":1,"endColumn":10},{"ruleId":"307","severity":1,"message":"392","line":3,"column":10,"nodeType":"309","messageId":"310","endLine":3,"endColumn":20},{"ruleId":"307","severity":1,"message":"393","line":3,"column":22,"nodeType":"309","messageId":"310","endLine":3,"endColumn":32},{"ruleId":"307","severity":1,"message":"342","line":3,"column":64,"nodeType":"309","messageId":"310","endLine":3,"endColumn":75},{"ruleId":"307","severity":1,"message":"394","line":3,"column":77,"nodeType":"309","messageId":"310","endLine":3,"endColumn":81},{"ruleId":"307","severity":1,"message":"395","line":3,"column":83,"nodeType":"309","messageId":"310","endLine":3,"endColumn":98},{"ruleId":"307","severity":1,"message":"396","line":4,"column":54,"nodeType":"309","messageId":"310","endLine":4,"endColumn":58},{"ruleId":"307","severity":1,"message":"335","line":4,"column":60,"nodeType":"309","messageId":"310","endLine":4,"endColumn":65},{"ruleId":"307","severity":1,"message":"397","line":4,"column":67,"nodeType":"309","messageId":"310","endLine":4,"endColumn":76},{"ruleId":"307","severity":1,"message":"398","line":4,"column":86,"nodeType":"309","messageId":"310","endLine":4,"endColumn":95},{"ruleId":"307","severity":1,"message":"399","line":4,"column":97,"nodeType":"309","messageId":"310","endLine":4,"endColumn":105},{"ruleId":"307","severity":1,"message":"400","line":4,"column":107,"nodeType":"309","messageId":"310","endLine":4,"endColumn":116},{"ruleId":"307","severity":1,"message":"401","line":4,"column":118,"nodeType":"309","messageId":"310","endLine":4,"endColumn":127},{"ruleId":"307","severity":1,"message":"402","line":4,"column":128,"nodeType":"309","messageId":"310","endLine":4,"endColumn":133},{"ruleId":"307","severity":1,"message":"403","line":4,"column":135,"nodeType":"309","messageId":"310","endLine":4,"endColumn":138},{"ruleId":"307","severity":1,"message":"404","line":4,"column":140,"nodeType":"309","messageId":"310","endLine":4,"endColumn":145},{"ruleId":"307","severity":1,"message":"405","line":4,"column":147,"nodeType":"309","messageId":"310","endLine":4,"endColumn":162},{"ruleId":"307","severity":1,"message":"406","line":5,"column":8,"nodeType":"309","messageId":"310","endLine":5,"endColumn":24},{"ruleId":"307","severity":1,"message":"356","line":6,"column":10,"nodeType":"309","messageId":"310","endLine":6,"endColumn":20},{"ruleId":"307","severity":1,"message":"313","line":7,"column":10,"nodeType":"309","messageId":"310","endLine":7,"endColumn":20},{"ruleId":"307","severity":1,"message":"407","line":12,"column":21,"nodeType":"309","messageId":"310","endLine":12,"endColumn":31},{"ruleId":"307","severity":1,"message":"408","line":14,"column":25,"nodeType":"309","messageId":"310","endLine":14,"endColumn":39},{"ruleId":"337","severity":1,"message":"343","line":46,"column":8,"nodeType":"339","endLine":46,"endColumn":30,"suggestions":"409"},{"ruleId":"325","severity":1,"message":"326","line":70,"column":35,"nodeType":"327","messageId":"328","endLine":70,"endColumn":37},{"ruleId":"337","severity":1,"message":"345","line":76,"column":6,"nodeType":"339","endLine":76,"endColumn":20,"suggestions":"410"},{"ruleId":"307","severity":1,"message":"321","line":78,"column":14,"nodeType":"309","messageId":"310","endLine":78,"endColumn":23},{"ruleId":"307","severity":1,"message":"322","line":88,"column":14,"nodeType":"309","messageId":"310","endLine":88,"endColumn":24},{"ruleId":"307","severity":1,"message":"354","line":6,"column":8,"nodeType":"309","messageId":"310","endLine":6,"endColumn":16},{"ruleId":"307","severity":1,"message":"383","line":9,"column":10,"nodeType":"309","messageId":"310","endLine":9,"endColumn":21},{"ruleId":"307","severity":1,"message":"384","line":9,"column":23,"nodeType":"309","messageId":"310","endLine":9,"endColumn":33},{"ruleId":"307","severity":1,"message":"385","line":9,"column":35,"nodeType":"309","messageId":"310","endLine":9,"endColumn":43},{"ruleId":"307","severity":1,"message":"386","line":9,"column":45,"nodeType":"309","messageId":"310","endLine":9,"endColumn":51},{"ruleId":"307","severity":1,"message":"411","line":20,"column":15,"nodeType":"309","messageId":"310","endLine":20,"endColumn":18},{"ruleId":"307","severity":1,"message":"412","line":113,"column":10,"nodeType":"309","messageId":"310","endLine":113,"endColumn":13},{"ruleId":"307","severity":1,"message":"359","line":117,"column":9,"nodeType":"309","messageId":"310","endLine":117,"endColumn":21},{"ruleId":"307","severity":1,"message":"413","line":145,"column":9,"nodeType":"309","messageId":"310","endLine":145,"endColumn":16},{"ruleId":"307","severity":1,"message":"414","line":146,"column":10,"nodeType":"309","messageId":"310","endLine":146,"endColumn":18},{"ruleId":"307","severity":1,"message":"415","line":147,"column":10,"nodeType":"309","messageId":"310","endLine":147,"endColumn":14},{"ruleId":"307","severity":1,"message":"416","line":149,"column":9,"nodeType":"309","messageId":"310","endLine":149,"endColumn":21},{"ruleId":"307","severity":1,"message":"417","line":153,"column":9,"nodeType":"309","messageId":"310","endLine":153,"endColumn":20},{"ruleId":"307","severity":1,"message":"418","line":157,"column":9,"nodeType":"309","messageId":"310","endLine":157,"endColumn":19},{"ruleId":"307","severity":1,"message":"360","line":161,"column":9,"nodeType":"309","messageId":"310","endLine":161,"endColumn":17},{"ruleId":"315","severity":1,"message":"316","line":163,"column":22,"nodeType":"317","messageId":"318","endLine":163,"endColumn":23,"suggestions":"419"},{"ruleId":"315","severity":1,"message":"316","line":163,"column":38,"nodeType":"317","messageId":"318","endLine":163,"endColumn":39,"suggestions":"420"},{"ruleId":"351","severity":1,"message":"352","line":232,"column":13,"nodeType":"353","endLine":232,"endColumn":33},"no-native-reassign",["421"],"no-negated-in-lhs",["422"],"no-unused-vars","'Line' is defined but never used.","Identifier","unusedVar","'SimpleImageSlider' is defined but never used.","'Fade' is defined but never used.","'ScrollMenu' is defined but never used.","'images' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["423","424"],["425","426"],"'LeftArrow' is defined but never used.","'RightArrow' is defined but never used.","'db' is defined but never used.","'ExpandLessIcon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'KeyboardArrowDown' is defined but never used.","'KeyboardDropUp' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Paper' is defined but never used.","'iconPath' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["427"],"'Link' is defined but never used.","'DoubleArrow' is defined but never used.","React Hook useEffect has a missing dependency: 'monthNames'. Either include it or remove the dependency array.",["428"],"React Hook useEffect has missing dependencies: 'monthNames' and 'nestedNews'. Either include them or remove the dependency array.",["429"],"jsx-a11y/aria-props","aria-collapsed: This attribute is an invalid ARIA attribute.","JSXAttribute","'REACT_APP_Pass' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'firebase' is defined but never used.","'DeleteForever' is defined but never used.","'IconButton' is defined but never used.","'uploadTask' is assigned a value but never used.","'deleteMember' is assigned a value but never used.","'handleUpload' is assigned a value but never used.","'validate' is assigned a value but never used.",["430","431"],["432","433"],"'MultiImageInput' is defined but never used.","React Hook useEffect has a missing dependency: 'formValues'. Either include it or remove the dependency array.",["434"],"'imgUrl' is assigned a value but never used.","'setimgUrl' is assigned a value but never used.","'images2' is assigned a value but never used.","'setImages2' is assigned a value but never used.","'crop' is assigned a value but never used.",["435","436"],["437","438"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"439","text":"440"},["441","442"],["443","444"],{"range":"445","text":"440"},"'makeStyles' is defined but never used.","'storage' is defined but never used.","'Description' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.",["446"],"React Hook useEffect has a missing dependency: 'member.Position'. Either include it or remove the dependency array. If 'setcategory' needs the current value of 'member.Position', you can also switch to useReducer instead of useState and read 'member.Position' in the reducer.",["447"],["448","449"],["450","451"],"'ExpandMore' is defined but never used.","'ExpandLess' is defined but never used.","'Flag' is defined but never used.","'CenterFocusWeak' is defined but never used.","'Grid' is defined but never used.","'TextField' is defined but never used.","'TableCell' is defined but never used.","'TableRow' is defined but never used.","'TableBody' is defined but never used.","'TableHead' is defined but never used.","'Modal' is defined but never used.","'Box' is defined but never used.","'Table' is defined but never used.","'TablePagination' is defined but never used.","'PerfectScrollbar' is defined but never used.","'setAllNews' is assigned a value but never used.","'SetInputFilter' is assigned a value but never used.",["452"],["453"],"'due' is assigned a value but never used.","'url' is assigned a value but never used.","'classes' is assigned a value but never used.","'category' is assigned a value but never used.","'open' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'handleOpen' is assigned a value but never used.",["454","455"],["456","457"],"no-global-assign","no-unsafe-negation",{"messageId":"458","fix":"459","desc":"460"},{"messageId":"461","fix":"462","desc":"463"},{"messageId":"458","fix":"464","desc":"460"},{"messageId":"461","fix":"465","desc":"463"},{"desc":"466","fix":"467"},{"desc":"468","fix":"469"},{"desc":"470","fix":"471"},{"messageId":"458","fix":"472","desc":"460"},{"messageId":"461","fix":"473","desc":"463"},{"messageId":"458","fix":"474","desc":"460"},{"messageId":"461","fix":"475","desc":"463"},{"desc":"476","fix":"477"},{"messageId":"458","fix":"478","desc":"460"},{"messageId":"461","fix":"479","desc":"463"},{"messageId":"458","fix":"480","desc":"460"},{"messageId":"461","fix":"481","desc":"463"},[13063,13063]," rel=\"noreferrer\"",{"messageId":"458","fix":"482","desc":"460"},{"messageId":"461","fix":"483","desc":"463"},{"messageId":"458","fix":"484","desc":"460"},{"messageId":"461","fix":"485","desc":"463"},[7122,7122],{"desc":"486","fix":"487"},{"desc":"488","fix":"489"},{"messageId":"458","fix":"490","desc":"460"},{"messageId":"461","fix":"491","desc":"463"},{"messageId":"458","fix":"492","desc":"460"},{"messageId":"461","fix":"493","desc":"463"},{"desc":"468","fix":"494"},{"desc":"470","fix":"495"},{"messageId":"458","fix":"496","desc":"460"},{"messageId":"461","fix":"497","desc":"463"},{"messageId":"458","fix":"498","desc":"460"},{"messageId":"461","fix":"499","desc":"463"},"removeEscape",{"range":"500","text":"501"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"502","text":"503"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"504","text":"501"},{"range":"505","text":"503"},"Update the dependencies array to be: [id]",{"range":"506","text":"507"},"Update the dependencies array to be: [inputFilter, allNews, monthNames]",{"range":"508","text":"509"},"Update the dependencies array to be: [filteredData, monthNames, nestedNews]",{"range":"510","text":"511"},{"range":"512","text":"501"},{"range":"513","text":"503"},{"range":"514","text":"501"},{"range":"515","text":"503"},"Update the dependencies array to be: [formValues]",{"range":"516","text":"517"},{"range":"518","text":"501"},{"range":"519","text":"503"},{"range":"520","text":"501"},{"range":"521","text":"503"},{"range":"522","text":"501"},{"range":"523","text":"503"},{"range":"524","text":"501"},{"range":"525","text":"503"},"Update the dependencies array to be: [monthNames]",{"range":"526","text":"527"},"Update the dependencies array to be: [member.Position]",{"range":"528","text":"529"},{"range":"530","text":"501"},{"range":"531","text":"503"},{"range":"532","text":"501"},{"range":"533","text":"503"},{"range":"534","text":"509"},{"range":"535","text":"511"},{"range":"536","text":"501"},{"range":"537","text":"503"},{"range":"538","text":"501"},{"range":"539","text":"503"},[2634,2635],"",[2634,2634],"\\",[2650,2651],[2650,2650],[1288,1290],"[id]",[2011,2033],"[inputFilter, allNews, monthNames]",[3153,3167],"[filteredData, monthNames, nestedNews]",[6203,6204],[6203,6203],[6219,6220],[6219,6219],[1351,1353],"[formValues]",[7776,7777],[7776,7776],[7792,7793],[7792,7792],[4326,4327],[4326,4326],[4342,4343],[4342,4342],[1672,1674],"[monthNames]",[648,650],"[member.Position]",[1363,1364],[1363,1363],[1379,1380],[1379,1379],[2015,2037],[3157,3171],[4584,4585],[4584,4584],[4600,4601],[4600,4600]]